{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGOUT, CONTACT_GET_SUCCESS, MESSAGE_GET_SUCCESS, MESSAGE_SEND_SUCCESS } from \"../types/messengerType\";\nimport consts from '../../consts';\nconst CREATE_ROUTE = consts.CREATE_ROUTE;\nexport const getContacts = myId => async dispatch => {\n  try {\n    const response = await axios.get(CREATE_ROUTE(`messenger/get-contacts/${myId}`));\n    dispatch({\n      type: CONTACT_GET_SUCCESS,\n      payload: {\n        contacts: response.data.contacts\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const messageSend = data => async dispatch => {\n  try {\n    const response = await axios.post(CREATE_ROUTE('messenger/send-message'), data);\n    dispatch({\n      type: MESSAGE_SEND_SUCCESS,\n      payload: {\n        message: response.data.message\n      }\n    });\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};\nexport const messengerActionLogOut = () => () => {\n  return dispatch => dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const getMessage = (expertId, myId) => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(CREATE_ROUTE(`messenger/get-message/${expertId}/${myId}`));\n      dispatch({\n        type: MESSAGE_GET_SUCCESS,\n        payload: {\n          message: response.data.message\n        }\n      });\n    } catch (error) {\n      console.log(\"error:\" + error);\n    }\n  };\n}; // Not in use\n// export const ImageMessageSend = (data) => async(dispatch)=>{\n//      try{\n//           const response = await axios.post('/api/messenger/image-message-send',data);\n//           dispatch({\n//                type: MESSAGE_SEND_SUCCESS,\n//                payload : {\n//                     message : response.data.message\n//                }\n//           })\n//      }catch (error){\n//           console.log(error.response.data);\n//      }\n// }\n\nexport const seenMessage = msg => async dispatch => {\n  try {\n    const response = await axios.post(CREATE_ROUTE('messenger/seen-message'), msg);\n    console.log(response.data);\n  } catch (error) {\n    console.log(error.response.message);\n  }\n};\nexport const updateMessage = msg => async dispatch => {\n  try {\n    const response = await axios.post(CREATE_ROUTE('messenger/delivered-message'), msg);\n    console.log(response.data);\n  } catch (error) {\n    console.log(error.response.message);\n  }\n};","map":{"version":3,"names":["axios","USER_LOGOUT","CONTACT_GET_SUCCESS","MESSAGE_GET_SUCCESS","MESSAGE_SEND_SUCCESS","consts","CREATE_ROUTE","getContacts","myId","dispatch","response","get","type","payload","contacts","data","error","console","log","messageSend","post","message","messengerActionLogOut","getMessage","expertId","seenMessage","msg","updateMessage"],"sources":["C:/Users/LeahC/OneDrive/Documents/AKAD/ABSCHLUSS BAK PROJ BACH/PROJEKT/ProjectCode/keep-going-react-app/frontend/src/store/actions/messengerAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport { USER_LOGOUT, CONTACT_GET_SUCCESS, MESSAGE_GET_SUCCESS, MESSAGE_SEND_SUCCESS } from \"../types/messengerType\";\r\nimport consts from '../../consts'\r\nconst CREATE_ROUTE = consts.CREATE_ROUTE\r\n\r\n\r\nexport const getContacts = (myId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(CREATE_ROUTE(`messenger/get-contacts/${myId}`));\r\n        dispatch({\r\n            type: CONTACT_GET_SUCCESS,\r\n            payload: {\r\n                contacts: response.data.contacts\r\n            }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const messageSend = (data) => async (dispatch) => {\r\n    try {\r\n\r\n        const response = await axios.post(CREATE_ROUTE('messenger/send-message'), data);\r\n        dispatch({\r\n            type: MESSAGE_SEND_SUCCESS,\r\n            payload: {\r\n                message: response.data.message\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const messengerActionLogOut = () =>  () => {\r\n    return dispatch => dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\n\r\nexport const getMessage = (expertId, myId) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(CREATE_ROUTE(`messenger/get-message/${expertId}/${myId}`));\r\n            dispatch({\r\n\r\n                type: MESSAGE_GET_SUCCESS,\r\n                payload: {\r\n                    message: response.data.message\r\n                }\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(\"error:\" + error)\r\n        }\r\n    }\r\n}\r\n\r\n// Not in use\r\n// export const ImageMessageSend = (data) => async(dispatch)=>{\r\n\r\n//      try{\r\n//           const response = await axios.post('/api/messenger/image-message-send',data);\r\n//           dispatch({\r\n//                type: MESSAGE_SEND_SUCCESS,\r\n//                payload : {\r\n//                     message : response.data.message\r\n//                }\r\n//           })\r\n//      }catch (error){\r\n//           console.log(error.response.data);\r\n\r\n//      }\r\n\r\n// }\r\n\r\nexport const seenMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(CREATE_ROUTE('messenger/seen-message'), msg);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updateMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(CREATE_ROUTE('messenger/delivered-message'), msg);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,mBAA3C,EAAgEC,oBAAhE,QAA4F,wBAA5F;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,MAAMC,YAAY,GAAGD,MAAM,CAACC,YAA5B;AAGA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;EACrD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUL,YAAY,CAAE,0BAAyBE,IAAK,EAAhC,CAAtB,CAAvB;IACAC,QAAQ,CAAC;MACLG,IAAI,EAAEV,mBADD;MAELW,OAAO,EAAE;QACLC,QAAQ,EAAEJ,QAAQ,CAACK,IAAT,CAAcD;MADnB;IAFJ,CAAD,CAAR;EAOH,CATD,CASE,OAAOE,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAbM;AAeP,OAAO,MAAMG,WAAW,GAAIJ,IAAD,IAAU,MAAON,QAAP,IAAoB;EACrD,IAAI;IAEA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAN,CAAWd,YAAY,CAAC,wBAAD,CAAvB,EAAmDS,IAAnD,CAAvB;IACAN,QAAQ,CAAC;MACLG,IAAI,EAAER,oBADD;MAELS,OAAO,EAAE;QACLQ,OAAO,EAAEX,QAAQ,CAACK,IAAT,CAAcM;MADlB;IAFJ,CAAD,CAAR;EAMH,CATD,CASE,OAAOL,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACN,QAAN,CAAeK,IAA3B;EACH;AACJ,CAbM;AAeP,OAAO,MAAMO,qBAAqB,GAAG,MAAO,MAAM;EAC9C,OAAOb,QAAQ,IAAIA,QAAQ,CAAC;IAAEG,IAAI,EAAEX;EAAR,CAAD,CAA3B;AACH,CAFM;AAKP,OAAO,MAAMsB,UAAU,GAAG,CAACC,QAAD,EAAWhB,IAAX,KAAoB;EAE1C,OAAO,MAAOC,QAAP,IAAoB;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUL,YAAY,CAAE,yBAAwBkB,QAAS,IAAGhB,IAAK,EAA3C,CAAtB,CAAvB;MACAC,QAAQ,CAAC;QAELG,IAAI,EAAET,mBAFD;QAGLU,OAAO,EAAE;UACLQ,OAAO,EAAEX,QAAQ,CAACK,IAAT,CAAcM;QADlB;MAHJ,CAAD,CAAR;IAQH,CAVD,CAUE,OAAOL,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAY,WAAWF,KAAvB;IACH;EACJ,CAdD;AAeH,CAjBM,C,CAmBP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,OAAO,MAAMS,WAAW,GAAIC,GAAD,IAAS,MAAOjB,QAAP,IAAoB;EACpD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAN,CAAWd,YAAY,CAAC,wBAAD,CAAvB,EAAmDoB,GAAnD,CAAvB;IACAT,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACK,IAArB;EACH,CAHD,CAGE,OAAOC,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACN,QAAN,CAAeW,OAA3B;EAEH;AACJ,CARM;AAWP,OAAO,MAAMM,aAAa,GAAID,GAAD,IAAS,MAAOjB,QAAP,IAAoB;EACtD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAN,CAAWd,YAAY,CAAC,6BAAD,CAAvB,EAAwDoB,GAAxD,CAAvB;IACAT,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACK,IAArB;EACH,CAHD,CAGE,OAAOC,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACN,QAAN,CAAeW,OAA3B;EAEH;AACJ,CARM"},"metadata":{},"sourceType":"module"}