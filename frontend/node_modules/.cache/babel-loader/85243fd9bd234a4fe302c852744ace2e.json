{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LeahC\\\\OneDrive\\\\Documents\\\\AKAD\\\\ABSCHLUSS BAK PROJ BACH\\\\PROJEKT\\\\ProjectCode\\\\keep-going-react-app\\\\frontend\\\\src\\\\Components\\\\messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from '@mui/material';\nimport styles from '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, Sidebar, ConversationList, Conversation, ExpansionPanel, ConversationHeader, VoiceCallButton, VideoCallButton, InfoButton, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getContacts, messageSend, getMessage, seenMessage, updateMessage } from '../../store/actions/messengerAction';\nimport { getOffer, offerSend, updateOffer } from '../../store/actions/offerAction'; // import { userGet } from '../../store/actions/authActions';\n\nimport { SocketContext } from '../../socketContext';\nimport { st as myStyles } from './styles';\nimport Offer from './Offer';\nimport consts from '../../consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TAG_COLORS = consts.TAG_COLORS;\nconst RANDOM_COLOR = consts.RANDOM_COLOR;\nconst currentStyles = {\n  keywords: {\n    display: 'flex',\n    fontSize: '2em'\n  },\n  li: {\n    listStyle: \"none\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingBottom: \"10px\"\n  },\n  ul: {\n    display: \"inline\",\n    paddingLeft: \"0.5rem\",\n    paddingRight: \"0.5rem\",\n    listStyle: \"none\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    lineHeight: \"2rem\",\n    backgroundColor: \"green\",\n    margin: \"0.5rem\",\n    borderRadius: \"0.5rem\"\n  }\n};\n\nfunction Messenger(props) {\n  _s();\n\n  const socket = useContext(SocketContext);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const scrollRef = useRef(); // const socket = useRef();\n\n  const {\n    contacts,\n    message,\n    messageSendSuccess,\n    messageGetSuccess,\n    new_user_add\n  } = useSelector(state => state.messenger);\n  let expert = location.state ? location.state.expert : contacts && contacts.length > 0 ? contacts[0].contactInfo : \"\";\n  const {\n    loading,\n    authenticated,\n    error,\n    successMessage,\n    user\n  } = useSelector(state => state.auth);\n  const {\n    offer,\n    offerContacts,\n    offerSendSuccess,\n    offerGetSuccess\n  } = useSelector(state => state.offer);\n  let myInfo = user;\n  const [currentContact, setCurrentContact] = useState(expert);\n  const [socketMessage, setSocketMessage] = useState(\"\");\n  const [socketOffer, setSocketOffer] = useState(\"\");\n  const [activeUser, setActiveUser] = useState(\"\");\n  const [hide, setHide] = useState(true);\n  const [typingMessage, setTypingMessage] = useState('');\n  const [newMessage, setNewMessage] = useState('');\n  const [price, setPrice] = useState(0);\n  const [offerFromMe, setOfferFromMe] = useState(false);\n  const [newOffer, setNewOffer] = useState(false); // gibt es ein offer ? // Das alles in Redux\n\n  const [askerId, setAskerId] = useState(\"\");\n  const [answererId, setAnswererId] = useState(\"\");\n  useEffect(() => {\n    myInfo = user;\n  }, [user]);\n  useEffect(() => {\n    socket.on('getMessage', data => {\n      setSocketMessage(data);\n    });\n    socket.on('getOffer', data => {\n      setSocketOffer(data);\n    });\n    socket.on('typingMessageGet', data => {\n      setTypingMessage(data);\n    });\n    socket.on('msgSeenResponse', msg => {\n      dispatch({\n        type: 'SEEN_MESSAGE',\n        payload: {\n          messageInfo: msg\n        }\n      });\n    });\n    socket.on('msgDeliveredResponse', msg => {\n      dispatch({\n        type: 'DELIVERED_MESSAGE',\n        payload: {\n          messageInfo: msg\n        }\n      });\n    });\n    socket.on('seenSuccess', data => {\n      dispatch({\n        type: 'SEEN_ALL',\n        payload: data\n      });\n    });\n    return () => {\n      var _socket$current;\n\n      (_socket$current = socket.current) === null || _socket$current === void 0 ? void 0 : _socket$current.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    let myId = myInfo.id ? myInfo.id : myInfo._id;\n    dispatch(getContacts(myId));\n  }, []);\n  useEffect(() => {\n    if (socketMessage && currentContact !== \"\") {\n      let myId = myInfo.id ? myInfo.id : myInfo._id;\n\n      if (socketMessage.senderId === currentContact._id && socketMessage.receiverId === myId) {\n        dispatch({\n          type: 'SOCKET_MESSAGE',\n          payload: {\n            message: socketMessage\n          }\n        });\n        dispatch(seenMessage(socketMessage));\n        socket.emit('messageSeen', socketMessage);\n        dispatch({\n          type: 'UPDATE_CONTACT_MESSAGE',\n          payload: {\n            messageInfo: socketMessage,\n            status: 'seen'\n          }\n        });\n      }\n    }\n\n    setSocketMessage('');\n  }, [socketMessage]);\n  useEffect(() => {\n    if (socketOffer && currentContact !== \"\") {\n      let myId = myInfo.id ? myInfo.id : myInfo._id;\n\n      if (socketOffer.senderId === currentContact._id && socketOffer.receiverId === myId) {\n        dispatch({\n          type: 'SOCKET_OFFER',\n          payload: {\n            offer: socketOffer\n          }\n        });\n      }\n    }\n\n    setSocketOffer('');\n  }, [socketOffer]);\n  useEffect(() => {\n    let myId = myInfo.id ? myInfo.id : myInfo._id;\n    socket.emit('addUser', myId, myInfo);\n  }, []);\n  useEffect(() => {\n    socket.on('getUser', users => {\n      let myId = myInfo.id ? myInfo.id : myInfo._id;\n      const activeUser = users.filter(u => u.userId !== myId);\n      setActiveUser(activeUser);\n    });\n    socket.on('new_user_add', data => {\n      dispatch({\n        type: 'NEW_USER_ADD',\n        payload: {\n          new_user_add: data\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    let myId = myInfo.id ? myInfo.id : myInfo._id;\n\n    if (socketMessage && socketMessage.senderId !== currentContact._id && socketMessage.receiverId === myId) {\n      //  notificationSPlay();\n      toast.success(`${socketMessage.senderName} Send a New Message`);\n      dispatch(updateMessage(socketMessage));\n      socket.emit('deliveredMessage', socketMessage);\n      dispatch({\n        type: 'UPDATE_CONTACT_MESSAGE',\n        payload: {\n          messageInfo: socketMessage,\n          status: 'delivered'\n        }\n      });\n    }\n  }, [socketMessage]);\n  useEffect(() => {\n    let myId = myInfo.id ? myInfo.id : myInfo._id;\n\n    if (socketOffer && socketOffer.senderId !== currentContact._id && socketOffer.receiverId === myId) {\n      toast.success(`${socketOffer.senderName} Send a New Offer`);\n      dispatch(updateOffer(socketOffer));\n      socket.emit('deliveredOffer', socketOffer);\n    }\n  }, [socketOffer]);\n\n  const handleInput = newMessage => {\n    // TODO need main in here then\n    let myId = myInfo.id ? myInfo.id : myInfo._id;\n    setNewMessage(newMessage);\n    socket.emit('typingMessage', {\n      senderId: myId,\n      receiverId: currentContact._id,\n      msg: newMessage\n    });\n  };\n\n  useEffect(() => {\n    if (offerSendSuccess) {\n      let sendId;\n      user.id ? sendId = user.id : sendId = user._id;\n      socket.emit('sendOffer', {\n        senderName: user.username,\n        receiverId: currentContact._id,\n        offer: {\n          price: price\n        },\n        askerId: askerId,\n        senderId: sendId,\n        answererId: answererId,\n        status: \"false\"\n      });\n      dispatch({\n        type: 'OFFER_SEND_SUCCESS_CLEAR'\n      });\n    }\n  }, [offerSendSuccess]);\n\n  const sendOffer = type => {\n    let askId;\n    let answId;\n    let myId;\n    user.id ? myId = user.id : myId = user._id;\n\n    if (type === 'asker') {\n      setAskerId(myId);\n      askId = myId;\n      answId = currentContact._id;\n      setAnswererId(currentContact._id);\n\n      if (user.tokens < price) {\n        toast.error('Not enough tokens');\n        return;\n      }\n    } else {\n      askId = currentContact._id;\n      setAskerId(currentContact._id);\n      answId = myId;\n      setAnswererId(myId);\n    }\n\n    const data = {\n      senderName: user.username,\n      senderId: myId,\n      receiverId: currentContact._id,\n      offer: {\n        price: price\n      },\n      askerId: askId,\n      answererId: answId,\n      status: \"false\"\n    };\n    dispatch(offerSend(data));\n    socket.emit('sendOffer', {\n      senderName: user.username,\n      senderId: myId,\n      receiverId: currentContact._id,\n      offer: {\n        price: price\n      },\n      askerId: askId,\n      answererId: answId,\n      status: \"false\"\n    });\n    setNewOffer(true);\n    setOfferFromMe(true);\n  };\n\n  const sendMessage = msg => {\n    let myId = myInfo.id ? myInfo.id : myInfo._id;\n    const data = {\n      senderName: myInfo.username,\n      receiverId: currentContact._id,\n      message: newMessage ? newMessage : '❤',\n      senderId: myId\n    };\n    setTypingMessage('');\n    socket.emit('typingMessage', {\n      senderId: myId,\n      receiver: currentContact._id,\n      receiverId: currentContact._id,\n      msg: ''\n    });\n    dispatch(messageSend(data));\n    setNewMessage('');\n  };\n\n  useEffect(() => {\n    if (messageSendSuccess) {\n      // from redux state\n      socket.emit('sendMessage', message[message.length - 1]);\n      dispatch({\n        type: 'UPDATE_CONTACT_MESSAGE',\n        payload: {\n          messageInfo: message[message.length - 1]\n        }\n      });\n      dispatch({\n        type: 'MESSAGE_SEND_SUCCESS_CLEAR'\n      });\n    }\n  }, [messageSendSuccess]);\n  useEffect(() => {\n    let myId = myInfo.id ? myInfo.id : myInfo._id;\n    dispatch(getContacts(myId));\n    dispatch({\n      type: 'NEW_USER_ADD_CLEAR'\n    });\n  }, [new_user_add]);\n  useEffect(() => {\n    let myId = myInfo.id ? myInfo.id : myInfo._id;\n    dispatch(getMessage(currentContact._id, myId));\n    dispatch(getOffer(currentContact._id, myId));\n  }, [currentContact === null || currentContact === void 0 ? void 0 : currentContact._id]);\n  useEffect(() => {\n    if (message.length > 0) {\n      let myId = myInfo.id ? myInfo.id : myInfo._id;\n\n      if (message[message.length - 1].senderId !== myId && message[message.length - 1].status !== 'seen') {\n        dispatch({\n          type: 'UPDATE',\n          payload: {\n            id: currentContact._id\n          }\n        });\n        socket.emit('seen', {\n          senderId: currentContact._id,\n          receiverId: myId\n        });\n        dispatch(seenMessage({\n          _id: message[message.length - 1]._id\n        }));\n      }\n    }\n\n    dispatch({\n      type: 'MESSAGE_GET_SUCCESS_CLEAR'\n    });\n  }, [messageGetSuccess]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [message]);\n\n  const updatePrice = updateDirection => {\n    let newPrice;\n    let oldPrice = price;\n\n    if (updateDirection === \"up\") {\n      newPrice = ++oldPrice;\n      setPrice(newPrice);\n    }\n\n    if (updateDirection === \"down\") {\n      newPrice = --oldPrice;\n      setPrice(newPrice);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toaster // notification\n    , {\n      position: 'top-right',\n      reverseOrder: false,\n      toastOptions: {\n        style: {\n          display: 'absolute',\n          fontSize: '18px'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: myStyles.container,\n      children: [/*#__PURE__*/_jsxDEV(Offer, {\n        currentContact: currentContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: myStyles.main,\n        children: /*#__PURE__*/_jsxDEV(MainContainer, {\n          responsive: true,\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n            position: \"left\",\n            scrollable: true,\n            children: /*#__PURE__*/_jsxDEV(ConversationList, {\n              children: contacts && contacts.length > 0 ? contacts.map((contact, index) => contact.messageInfo ? /*#__PURE__*/_jsxDEV(Conversation, {\n                onClick: () => {\n                  setCurrentContact(contact.contactInfo);\n                },\n                active: currentContact._id === contact.contactInfo._id ? true : false // activeUser={activeUser} \n                ,\n                name: contact.contactInfo.username,\n                info: contact.messageInfo ? contact.messageInfo.message.text : \"no messages yet\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 37\n              }, this) : null) : /*#__PURE__*/_jsxDEV(Conversation, {\n                name: \"No Contacts\",\n                info: \"No Messages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ConversationHeader, {\n              children: [/*#__PURE__*/_jsxDEV(ConversationHeader.Back, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ConversationHeader.Content, {\n                userName: currentContact.username // info=\"Active 10 mins ago\" \n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ConversationHeader.Actions, {\n                children: /*#__PURE__*/_jsxDEV(InfoButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n              typingIndicator: typingMessage.msg ? /*#__PURE__*/_jsxDEV(TypingIndicator, {\n                content: currentContact.username + \" is typing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 75\n              }, this) : false,\n              children: message && message.length > 0 ? message.map((msg, index) => msg.senderId === myInfo.id || msg.senderId === myInfo._id ? /*#__PURE__*/_jsxDEV(Message, {\n                model: {\n                  message: msg.message.text,\n                  sentTime: \"15 mins ago\",\n                  sender: msg.senderName,\n                  direction: \"outgoing\",\n                  position: \"normal\"\n                },\n                avatarSpacer: true\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                model: {\n                  message: msg.message.text,\n                  sentTime: \"15 mins ago\",\n                  sender: msg.senderName,\n                  direction: \"incoming\",\n                  position: \"single\"\n                },\n                avatarSpacer: true\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 37\n              }, this)) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n              placeholder: \"Type message here\",\n              onSend: e => sendMessage(e),\n              onChange: e => handleInput(e),\n              attachButton: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n            position: \"right\",\n            style: styles.sidebar,\n            children: [/*#__PURE__*/_jsxDEV(ExpansionPanel, {\n              open: true,\n              title: \"Create new offer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.offerContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: styles.offerButtons,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    style: styles.button,\n                    onClick: () => updatePrice(\"down\"),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: styles.price,\n                    children: price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    style: styles.button,\n                    onClick: () => updatePrice(\"up\"),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: styles.button,\n                  onClick: e => sendOffer(\"asker\"),\n                  children: \"Send Offer (I need help!) \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: styles.button,\n                  onClick: e => sendOffer(\"answerer\"),\n                  children: \"Send Offer (I'll help!)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ExpansionPanel, {\n              open: true,\n              title: \"Expert profile overview\",\n              children: currentContact ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: currentContact.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: currentContact.mainExpertise\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: currentStyles.keywords,\n                  children: currentContact.keywords ? /*#__PURE__*/_jsxDEV(\"li\", {\n                    style: currentStyles.li,\n                    children: currentContact.keywords.map(kw => {\n                      return /*#__PURE__*/_jsxDEV(\"ul\", {\n                        style: { ...currentStyles.ul,\n                          backgroundColor: RANDOM_COLOR(TAG_COLORS)\n                        },\n                        children: kw.word.toLowerCase()\n                      }, kw.word, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 93\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 45\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Select Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Messenger, \"bEX8dvPjVVpkSc6dy9mi7B7PKPo=\", false, function () {\n  return [useLocation, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","useLocation","Button","styles","MainContainer","ChatContainer","MessageList","Message","MessageInput","Sidebar","ConversationList","Conversation","ExpansionPanel","ConversationHeader","VoiceCallButton","VideoCallButton","InfoButton","TypingIndicator","useDispatch","useSelector","toast","Toaster","getContacts","messageSend","getMessage","seenMessage","updateMessage","getOffer","offerSend","updateOffer","SocketContext","st","myStyles","Offer","consts","TAG_COLORS","RANDOM_COLOR","currentStyles","keywords","display","fontSize","li","listStyle","flexWrap","alignItems","justifyContent","paddingBottom","ul","paddingLeft","paddingRight","lineHeight","backgroundColor","margin","borderRadius","Messenger","props","socket","location","dispatch","scrollRef","contacts","message","messageSendSuccess","messageGetSuccess","new_user_add","state","messenger","expert","length","contactInfo","loading","authenticated","error","successMessage","user","auth","offer","offerContacts","offerSendSuccess","offerGetSuccess","myInfo","currentContact","setCurrentContact","socketMessage","setSocketMessage","socketOffer","setSocketOffer","activeUser","setActiveUser","hide","setHide","typingMessage","setTypingMessage","newMessage","setNewMessage","price","setPrice","offerFromMe","setOfferFromMe","newOffer","setNewOffer","askerId","setAskerId","answererId","setAnswererId","on","data","msg","type","payload","messageInfo","current","disconnect","myId","id","_id","senderId","receiverId","emit","status","users","filter","u","userId","success","senderName","handleInput","sendId","username","sendOffer","askId","answId","tokens","sendMessage","receiver","scrollIntoView","behavior","updatePrice","updateDirection","newPrice","oldPrice","style","container","main","width","map","contact","index","text","sentTime","sender","direction","position","e","sidebar","offerContainer","offerButtons","button","mainExpertise","kw","word","toLowerCase"],"sources":["C:/Users/LeahC/OneDrive/Documents/AKAD/ABSCHLUSS BAK PROJ BACH/PROJEKT/ProjectCode/keep-going-react-app/frontend/src/Components/messenger/Messenger.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Button } from '@mui/material';\r\n\r\nimport styles from '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\r\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, Sidebar, ConversationList, Conversation, ExpansionPanel, ConversationHeader, VoiceCallButton, VideoCallButton, InfoButton, TypingIndicator } from '@chatscope/chat-ui-kit-react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { getContacts, messageSend, getMessage, seenMessage, updateMessage, } from '../../store/actions/messengerAction';\r\nimport { getOffer, offerSend, updateOffer } from '../../store/actions/offerAction';\r\n// import { userGet } from '../../store/actions/authActions';\r\n\r\nimport { SocketContext } from '../../socketContext';\r\n\r\nimport { st as myStyles } from './styles'\r\nimport Offer from './Offer';\r\nimport consts from '../../consts'\r\nconst TAG_COLORS = consts.TAG_COLORS\r\nconst RANDOM_COLOR = consts.RANDOM_COLOR\r\n\r\nconst currentStyles = {\r\n    keywords: {\r\n        display: 'flex',\r\n        fontSize: '2em'\r\n    },\r\n    li: {\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingBottom: \"10px\",\r\n    },\r\n    ul: {\r\n        display: \"inline\",\r\n        paddingLeft: \"0.5rem\",\r\n        paddingRight: \"0.5rem\",\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        lineHeight: \"2rem\",\r\n        backgroundColor: \"green\",\r\n        margin: \"0.5rem\",\r\n        borderRadius: \"0.5rem\",\r\n    },\r\n}\r\nfunction Messenger(props) {\r\n    const socket = useContext(SocketContext)\r\n    const location = useLocation();\r\n\r\n    const dispatch = useDispatch();\r\n    const scrollRef = useRef();\r\n    // const socket = useRef();\r\n\r\n    const { contacts, message, messageSendSuccess, messageGetSuccess, new_user_add } = useSelector(state => state.messenger);\r\n    let expert = location.state ? location.state.expert : contacts && contacts.length > 0 ? contacts[0].contactInfo : \"\";\r\n    const { loading, authenticated, error, successMessage, user } = useSelector(state => state.auth);\r\n    const { offer, offerContacts, offerSendSuccess, offerGetSuccess } = useSelector(state => state.offer);\r\n    let myInfo = user\r\n\r\n\r\n    const [currentContact, setCurrentContact] = useState(expert);\r\n    const [socketMessage, setSocketMessage] = useState(\"\");\r\n    const [socketOffer, setSocketOffer] = useState(\"\");\r\n    const [activeUser, setActiveUser] = useState(\"\");\r\n    const [hide, setHide] = useState(true);\r\n\r\n    const [typingMessage, setTypingMessage] = useState('');\r\n\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    const [price, setPrice] = useState(0);\r\n    const [offerFromMe, setOfferFromMe] = useState(false);\r\n    const [newOffer, setNewOffer] = useState(false) // gibt es ein offer ? // Das alles in Redux\r\n\r\n    const [askerId, setAskerId] = useState(\"\")\r\n    const [answererId, setAnswererId] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        myInfo = user\r\n    }, [user])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('getMessage', (data) => {\r\n            setSocketMessage(data)\r\n        })\r\n\r\n        socket.on('getOffer', (data) => {\r\n            setSocketOffer(data)\r\n        })\r\n\r\n        socket.on('typingMessageGet', (data) => {\r\n            setTypingMessage(data)\r\n        })\r\n\r\n        socket.on('msgSeenResponse', msg => {\r\n            dispatch({\r\n                type: 'SEEN_MESSAGE',\r\n                payload: {\r\n                    messageInfo: msg\r\n                }\r\n            })\r\n        })\r\n\r\n        socket.on('msgDeliveredResponse', msg => {\r\n            dispatch({\r\n                type: 'DELIVERED_MESSAGE',\r\n                payload: {\r\n                    messageInfo: msg\r\n                }\r\n            })\r\n        })\r\n\r\n        socket.on('seenSuccess', data => {\r\n            dispatch({\r\n                type: 'SEEN_ALL',\r\n                payload: data\r\n            })\r\n        })\r\n\r\n        return () => { socket.current?.disconnect() }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        dispatch(getContacts(myId))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (socketMessage && currentContact !== \"\") {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            if (socketMessage.senderId === currentContact._id && socketMessage.receiverId === myId) {\r\n                dispatch({\r\n                    type: 'SOCKET_MESSAGE',\r\n                    payload: {\r\n                        message: socketMessage\r\n                    }\r\n                })\r\n                dispatch(seenMessage(socketMessage));\r\n                socket.emit('messageSeen', socketMessage);\r\n                dispatch({\r\n                    type: 'UPDATE_CONTACT_MESSAGE',\r\n                    payload: {\r\n                        messageInfo: socketMessage,\r\n                        status: 'seen'\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        setSocketMessage('')\r\n    }, [socketMessage]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (socketOffer && currentContact !== \"\") {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            if (socketOffer.senderId === currentContact._id && socketOffer.receiverId === myId) {\r\n                dispatch({\r\n                    type: 'SOCKET_OFFER',\r\n                    payload: {\r\n                        offer: socketOffer\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        setSocketOffer('')\r\n    }, [socketOffer]);\r\n\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        socket.emit('addUser', myId, myInfo)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on('getUser', (users) => {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            const activeUser = users.filter(u => u.userId !== myId)\r\n            setActiveUser(activeUser)\r\n        })\r\n\r\n        socket.on('new_user_add', data => {\r\n            dispatch({\r\n                type: 'NEW_USER_ADD',\r\n                payload: {\r\n                    new_user_add: data\r\n                }\r\n            })\r\n        })\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        if (socketMessage && socketMessage.senderId !== currentContact._id && socketMessage.receiverId === myId) {\r\n            //  notificationSPlay();\r\n            toast.success(`${socketMessage.senderName} Send a New Message`)\r\n            dispatch(updateMessage(socketMessage));\r\n            socket.emit('deliveredMessage', socketMessage);\r\n            dispatch({\r\n                type: 'UPDATE_CONTACT_MESSAGE',\r\n                payload: {\r\n                    messageInfo: socketMessage,\r\n                    status: 'delivered'\r\n                }\r\n            })\r\n\r\n        }\r\n    }, [socketMessage]);\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        if (socketOffer && socketOffer.senderId !== currentContact._id && socketOffer.receiverId === myId) {\r\n            toast.success(`${socketOffer.senderName} Send a New Offer`)\r\n            dispatch(updateOffer(socketOffer));\r\n            socket.emit('deliveredOffer', socketOffer);\r\n\r\n        }\r\n    }, [socketOffer]);\r\n\r\n\r\n    const handleInput = (newMessage) => { // TODO need main in here then\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        setNewMessage(newMessage)\r\n        socket.emit('typingMessage', {\r\n            senderId: myId,\r\n            receiverId: currentContact._id,\r\n            msg: newMessage\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (offerSendSuccess) {\r\n\r\n            let sendId\r\n            user.id ? sendId = user.id : sendId = user._id\r\n            socket.emit('sendOffer', {\r\n                senderName: user.username,\r\n                receiverId: currentContact._id,\r\n                offer: { price: price },\r\n                askerId: askerId,\r\n                senderId: sendId,\r\n                answererId: answererId,\r\n                status: \"false\"\r\n            })\r\n            dispatch({\r\n                type: 'OFFER_SEND_SUCCESS_CLEAR'\r\n            })\r\n        }\r\n    }, [offerSendSuccess])\r\n\r\n    const sendOffer = (type) => {\r\n\r\n        let askId\r\n        let answId\r\n        let myId\r\n        user.id ? myId = user.id : myId = user._id\r\n\r\n        if (type === 'asker') {\r\n            setAskerId(myId)\r\n            askId = myId\r\n            answId = currentContact._id\r\n            setAnswererId(currentContact._id)\r\n            if (user.tokens < price) {\r\n                toast.error('Not enough tokens')\r\n                return\r\n            }\r\n\r\n        } else {\r\n            askId = currentContact._id\r\n            setAskerId(currentContact._id)\r\n            answId = myId\r\n            setAnswererId(myId)\r\n        }\r\n\r\n\r\n\r\n        const data = {\r\n            senderName: user.username,\r\n            senderId: myId,\r\n            receiverId: currentContact._id,\r\n            offer: { price: price },\r\n            askerId: askId,\r\n            answererId: answId,\r\n            status: \"false\"\r\n        }\r\n\r\n        dispatch(offerSend(data));\r\n\r\n\r\n        socket.emit('sendOffer', {\r\n            senderName: user.username,\r\n            senderId: myId,\r\n            receiverId: currentContact._id,\r\n            offer: { price: price },\r\n            askerId: askId,\r\n            answererId: answId,\r\n            status: \"false\"\r\n        })\r\n\r\n\r\n        setNewOffer(true)\r\n        setOfferFromMe(true)\r\n    }\r\n\r\n    const sendMessage = (msg) => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n\r\n        const data = {\r\n            senderName: myInfo.username,\r\n            receiverId: currentContact._id,\r\n            message: newMessage ? newMessage : '❤',\r\n            senderId: myId\r\n        }\r\n\r\n        setTypingMessage('')\r\n\r\n        socket.emit('typingMessage', {\r\n            senderId: myId,\r\n            receiver: currentContact._id,\r\n            receiverId: currentContact._id,\r\n            msg: ''\r\n        })\r\n\r\n        dispatch(messageSend(data));\r\n        setNewMessage('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (messageSendSuccess) { // from redux state\r\n            socket.emit('sendMessage', message[message.length - 1]);\r\n            dispatch({\r\n                type: 'UPDATE_CONTACT_MESSAGE',\r\n                payload: {\r\n                    messageInfo: message[message.length - 1]\r\n                }\r\n            })\r\n            dispatch({\r\n                type: 'MESSAGE_SEND_SUCCESS_CLEAR'\r\n            })\r\n        }\r\n    }, [messageSendSuccess]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        dispatch(getContacts(myId))\r\n        dispatch({ type: 'NEW_USER_ADD_CLEAR' })\r\n    }, [new_user_add]);\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        dispatch(getMessage(currentContact._id, myId));\r\n        dispatch(getOffer(currentContact._id, myId));\r\n    }, [currentContact?._id]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (message.length > 0) {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            if (message[message.length - 1].senderId !== myId && message[message.length - 1].status !== 'seen') {\r\n                dispatch({\r\n                    type: 'UPDATE',\r\n                    payload: {\r\n                        id: currentContact._id\r\n                    }\r\n                })\r\n                socket.emit('seen', { senderId: currentContact._id, receiverId: myId })\r\n                dispatch(seenMessage({ _id: message[message.length - 1]._id }))\r\n            }\r\n        }\r\n        dispatch({\r\n            type: 'MESSAGE_GET_SUCCESS_CLEAR'\r\n        })\r\n\r\n    }, [messageGetSuccess]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: 'smooth' })\r\n    }, [message]);\r\n\r\n    const updatePrice = (updateDirection) => {\r\n        let newPrice\r\n        let oldPrice = price\r\n        if (updateDirection === \"up\") {\r\n\r\n            newPrice = ++oldPrice\r\n            setPrice(newPrice)\r\n        }\r\n        if (updateDirection === \"down\") {\r\n            newPrice = --oldPrice\r\n            setPrice(newPrice)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (<div>\r\n        <Toaster // notification\r\n            position={'top-right'}\r\n            reverseOrder={false}\r\n            toastOptions={{\r\n                style: {\r\n                    display: 'absolute',\r\n                    fontSize: '18px'\r\n                }\r\n            }}\r\n\r\n        />\r\n        <div style={myStyles.container}>\r\n            <Offer currentContact={currentContact} />\r\n            <div style={myStyles.main}>\r\n\r\n                <MainContainer responsive style={{ width: '100%' }}>\r\n                    <Sidebar position=\"left\" scrollable={true}>\r\n                        {/* <Search placeholder=\"Search...\" /> */}\r\n                        <ConversationList>\r\n\r\n                            {contacts && contacts.length > 0 ? contacts.map((contact, index) =>\r\n                                contact.messageInfo ?\r\n                                    <Conversation\r\n                                        key={index}\r\n                                        onClick={() => { setCurrentContact(contact.contactInfo) }}\r\n                                        active={currentContact._id === contact.contactInfo._id ? true : false}\r\n                                        // activeUser={activeUser} \r\n                                        name={contact.contactInfo.username} info={contact.messageInfo ? contact.messageInfo.message.text : \"no messages yet\"}>\r\n\r\n                                    </Conversation> : null\r\n                            ) : <Conversation name={\"No Contacts\"} info=\"No Messages\">\r\n\r\n                            </Conversation>}\r\n\r\n                        </ConversationList>\r\n                    </Sidebar>\r\n\r\n                    <ChatContainer>\r\n                        <ConversationHeader>\r\n                            <ConversationHeader.Back />\r\n                            {/* <Avatar src={zoeIco} name=\"Zoe\" /> */}\r\n                            <ConversationHeader.Content userName={currentContact.username}\r\n                            // info=\"Active 10 mins ago\" \r\n                            />\r\n                            <ConversationHeader.Actions>\r\n                                {/* <VoiceCallButton />\r\n                                <VideoCallButton /> */}\r\n                                <InfoButton />\r\n                            </ConversationHeader.Actions>\r\n                        </ConversationHeader>\r\n                        <MessageList typingIndicator={typingMessage.msg ? <TypingIndicator content={currentContact.username + \" is typing\"} /> : false} >\r\n                            {/* \r\n                        {typingMessage.senderId === currentContact._id ? <TypingIndicator content=\" is typing\" /> : null} */}\r\n\r\n\r\n                            {/* <MessageSeparator content=\"Saturday, 30 November 2019\" /> */}\r\n                            {message && message.length > 0 ?\r\n\r\n                                message.map((msg, index) =>\r\n                                (msg.senderId === myInfo.id || msg.senderId === myInfo._id ?\r\n                                    < Message key={index}\r\n                                        model={{\r\n                                            message: msg.message.text,\r\n                                            sentTime: \"15 mins ago\",\r\n                                            sender: msg.senderName,\r\n                                            direction: \"outgoing\",\r\n                                            position: \"normal\"\r\n                                        }} avatarSpacer /> :\r\n                                    <Message key={index}\r\n                                        model={{\r\n                                            message: msg.message.text,\r\n                                            sentTime: \"15 mins ago\",\r\n                                            sender: msg.senderName,\r\n                                            direction: \"incoming\",\r\n                                            position: \"single\"\r\n                                        }} avatarSpacer />\r\n                                ))\r\n\r\n                                : null}\r\n\r\n                        </MessageList>\r\n                        <MessageInput placeholder=\"Type message here\"\r\n                            onSend={(e) => sendMessage(e)}\r\n                            onChange={(e) => handleInput(e)}attachButton\r\n                        />\r\n                    </ChatContainer>\r\n\r\n                    <Sidebar position=\"right\" style={styles.sidebar}>\r\n                        <ExpansionPanel open title=\"Create new offer\">\r\n                            <div style={styles.offerContainer}>\r\n                                <div style={styles.offerButtons}>\r\n                                    <Button style={styles.button} onClick={() => updatePrice(\"down\")}>-</Button>\r\n                                    <div style={styles.price}>{price}</div>\r\n                                    <Button style={styles.button} onClick={() => updatePrice(\"up\")}>+</Button>\r\n\r\n                                </div>\r\n                                <Button style={styles.button} onClick={(e) => sendOffer(\"asker\")}>Send Offer (I need help!) </Button>\r\n                                <Button style={styles.button} onClick={(e) => sendOffer(\"answerer\")}>Send Offer (I'll help!)</Button>\r\n                            </div>\r\n                        </ExpansionPanel>\r\n                        <ExpansionPanel open title=\"Expert profile overview\">\r\n                            {currentContact ?\r\n                                <div>\r\n                                    <div>\r\n                                        {currentContact.username}\r\n                                    </div>\r\n                                    <div>{currentContact.mainExpertise}</div>\r\n                                    <div style={currentStyles.keywords}>\r\n                                        {currentContact.keywords ?\r\n                                            <li style={currentStyles.li}>\r\n                                                {currentContact.keywords.map(kw => { return <ul style={{ ...currentStyles.ul, backgroundColor: RANDOM_COLOR(TAG_COLORS) }} key={kw.word}>{kw.word.toLowerCase()}</ul> })}\r\n\r\n                                            </li> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div>Select Contact</div>\r\n                            }\r\n                        </ExpansionPanel>\r\n                    </Sidebar>\r\n                </MainContainer >\r\n            </div >\r\n        </div ></div >\r\n    )\r\n}\r\nexport default Messenger;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}