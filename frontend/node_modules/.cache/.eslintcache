[{"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\index.js":"1","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\App.js":"3","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\consts.js":"4","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\types\\authType.js":"5","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\actions\\authActions.js":"6","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\actions\\messengerAction.js":"7","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\actions\\offerAction.js":"8","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\types\\messengerType.js":"9","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\types\\offerType.js":"10","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\socketContext.js":"11","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\index.js":"12","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\reducers\\authReducer.js":"13","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\reducers\\messengerReducer.js":"14","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\reducers\\offerReducer.js":"15","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\ExpertProfile.jsx":"16","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Login.jsx":"17","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\LandingPage.jsx":"18","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Result.jsx":"19","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Profile.jsx":"20","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Results.jsx":"21","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\NavBar.jsx":"22","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\SearchPage.jsx":"23","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\messenger\\Messenger.jsx":"24","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\messenger\\Offer.jsx":"25","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\messenger\\styles.jsx":"26","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Signup.jsx":"27"},{"size":697,"mtime":1665379150116,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1656861975757,"results":"30","hashOfConfig":"29"},{"size":3711,"mtime":1665379064645,"results":"31","hashOfConfig":"29"},{"size":487,"mtime":1665379336995,"results":"32","hashOfConfig":"29"},{"size":488,"mtime":1663491553962,"results":"33","hashOfConfig":"29"},{"size":4005,"mtime":1665308612715,"results":"34","hashOfConfig":"29"},{"size":2754,"mtime":1663574356108,"results":"35","hashOfConfig":"29"},{"size":2344,"mtime":1663572798107,"results":"36","hashOfConfig":"29"},{"size":786,"mtime":1663572940165,"results":"37","hashOfConfig":"29"},{"size":544,"mtime":1663572805770,"results":"38","hashOfConfig":"29"},{"size":177,"mtime":1665379038317,"results":"39","hashOfConfig":"29"},{"size":772,"mtime":1663267595585,"results":"40","hashOfConfig":"29"},{"size":2763,"mtime":1663491553954,"results":"41","hashOfConfig":"29"},{"size":4288,"mtime":1665307551883,"results":"42","hashOfConfig":"29"},{"size":2473,"mtime":1663572838086,"results":"43","hashOfConfig":"29"},{"size":3187,"mtime":1662929653831,"results":"44","hashOfConfig":"29"},{"size":3780,"mtime":1665308732055,"results":"45","hashOfConfig":"29"},{"size":2030,"mtime":1657216485956,"results":"46","hashOfConfig":"29"},{"size":4088,"mtime":1662929653836,"results":"47","hashOfConfig":"29"},{"size":10053,"mtime":1663267595558,"results":"48","hashOfConfig":"29"},{"size":808,"mtime":1663267595560,"results":"49","hashOfConfig":"29"},{"size":3329,"mtime":1663573019435,"results":"50","hashOfConfig":"29"},{"size":3683,"mtime":1663267595562,"results":"51","hashOfConfig":"29"},{"size":18069,"mtime":1665379083503,"results":"52","hashOfConfig":"29"},{"size":5074,"mtime":1665379107119,"results":"53","hashOfConfig":"29"},{"size":1129,"mtime":1663491553927,"results":"54","hashOfConfig":"29"},{"size":7966,"mtime":1665378823669,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7x2cti",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"115"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\index.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\App.js",["154","155","156","157","158","159","160","161","162"],[],"import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\r\n// import { USER_LOGIN_SUCCESS } from '../store/types/authType';\r\nimport { USER_LOGIN_SUCCESS } from './store/types/authType';\r\n\r\nimport NavBar from './Components/NavBar';\r\nimport LandingPage from './Components/LandingPage';\r\nimport SearchPage from './Components/SearchPage';\r\nimport Signup from './Components/Signup';\r\nimport Login from './Components/Login';\r\nimport Profile from './Components/Profile';\r\nimport Results from './Components/Results';\r\nimport './App.css';\r\nimport consts from './consts'\r\nimport './main.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ExpertProfile from './Components/ExpertProfile';\r\nimport Messenger from './Components/messenger/Messenger';\r\nimport { userLogin } from './store/actions/authActions';\r\n\r\nimport { SocketContext, socket } from './socketContext';\r\n\r\nconst CREATE_ROUTE = consts.CREATE_ROUTE\r\n\r\n\r\nconst styles = {\r\n  main: { display: \"flex\", flexFlow: \"column\" }\r\n}\r\nfunction App(props) {\r\n\r\n  const [state, setState] = useState({\r\n    login: {\r\n      isLoggedIn: false,\r\n      user: {\r\n        email: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        usernameTaken: false,\r\n        emailTaken: false,\r\n        mainExpertise: \"\",\r\n        mainExpertiseKeywords: [],\r\n        keywords: [],\r\n        otherKeywords: [],\r\n        tokens: 0,\r\n      },\r\n    }, title: \"\", currentPage: \"\"\r\n  });\r\n\r\n  const { loading, authenticated, error, successMessage, user } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    let user = localStorage.login ? JSON.parse(localStorage.login).user : null\r\n    if (user) {\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: {\r\n          successMessage: \"Logged in from LocalStorage\",\r\n          user: user\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      < BrowserRouter >\r\n        <div style={styles.main}>\r\n\r\n          <NavBar />\r\n\r\n\r\n          <div className=\"page\">\r\n            <Routes>\r\n              <Route path=\"/\" element={\r\n                (authenticated ?\r\n                  (<Navigate to=\"/search\" />) :\r\n                  (<LandingPage />))}>\r\n              </Route>\r\n\r\n\r\n              <Route path=\"/search\" element={\r\n                (authenticated ?\r\n                  (<SearchPage />) :\r\n                  (<LandingPage />))\r\n              }>\r\n              </Route>\r\n\r\n              <Route path=\"/login\" element={\r\n                <Login />}>\r\n              </Route>\r\n              <Route path=\"/results\" element={\r\n                (authenticated ?\r\n                  (<Results />) :\r\n                  (<Navigate to=\"/\" />))\r\n              }>\r\n              </Route>\r\n              <Route path=\"/register\" element={\r\n                <Signup />}>\r\n              </Route>\r\n              <Route path=\"/profile\" element={\r\n                (authenticated ?\r\n                  (<Profile />) :\r\n                  (<Navigate to=\"/\" />))\r\n              }>\r\n              </Route>\r\n\r\n              <Route path=\"/expert\" element={\r\n                (authenticated ?\r\n                  (<ExpertProfile />) :\r\n                  (<Navigate to=\"/\" />))\r\n              }>\r\n              </Route>\r\n\r\n              <Route path=\"/chat\" element={\r\n                (authenticated ?\r\n                  (<Messenger />) :\r\n                  (<Navigate to=\"/\" />))\r\n              }>\r\n              </Route>\r\n\r\n            </Routes>\r\n\r\n          </div>\r\n        </div>\r\n      </BrowserRouter >\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\consts.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\types\\authType.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\actions\\authActions.js",["163","164"],[],"import Axios from 'axios';\r\nimport consts from '../../consts'\r\nimport { AUTH_FAIL, AUTH_SUCCESS, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, CLEAR_ERROR, USER_LOGOUT, USER_UPDATE_SUCCESS, USER_GET_FAIL, USER_GET_SUCCESS, USER_UPDATE_FAIL } from '../types/authType';\r\nconst CREATE_ROUTE = consts.CREATE_ROUTE\r\nconst util = require(\"util\")\r\n\r\nexport const userRegister = (user) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const response = await Axios.post(CREATE_ROUTE(\"user\"), user)\r\n            dispatch({\r\n                type: AUTH_SUCCESS,\r\n                payload: {\r\n                    successMessage: response.data.successMessage,\r\n                    user: response.data.user,\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: AUTH_FAIL,\r\n                payload: { error: error.response.data.error.errorMessage }\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const userLogin = (data) => {\r\n    let { username, password } = data\r\n    if (!password) { alert(\"Please enter your password.\") }\r\n    if (!username) { alert(\"Please enter your username.\") }\r\n\r\n    return async dispatch => {\r\n        try {\r\n            let response = await Axios.get(CREATE_ROUTE(`login/${username}/${password}`)) // asynchronous function\r\n            console.log(\"in user Update\");\r\n            console.log(response.data)\r\n            if(response.data.error){\r\n                dispatch({\r\n                    type: USER_LOGIN_FAIL,\r\n                    payload: {\r\n                        error: response.data.error.errorMessage\r\n                    }\r\n                })\r\n            } else {\r\n                let login = { isLoggedIn: true, user: response.data.user }\r\n                localStorage.login = JSON.stringify(login)\r\n    \r\n                dispatch({\r\n                    type: USER_LOGIN_SUCCESS,\r\n                    payload: {\r\n                        successMessage: response.data.successMessage,\r\n                        user: response.data.user\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userLogout = () => {\r\n    localStorage.clear()\r\n    return dispatch => dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\nexport const userUpdate = (data) => {\r\n    let updateUser = data.updateUser\r\n    let username = updateUser.username\r\n    let oldKeywords = data.oldKeywords\r\n\r\n    let transferData = {\r\n        updateUser,\r\n        oldKeywords\r\n    }\r\n\r\n    return async dispatch => {\r\n        try {\r\n            let response = await Axios.put(CREATE_ROUTE(`user/${username}`), transferData)\r\n\r\n            dispatch({\r\n                type: USER_UPDATE_SUCCESS,\r\n                payload: {\r\n                    successMessage: response.data.successMessage,\r\n                    user: response.data.user\r\n                }\r\n            })\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: USER_UPDATE_FAIL,\r\n                payload: {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const userGet = (user) => {\r\n    let { username } = user\r\n    return async dispatch => {\r\n        try {\r\n            let response = await Axios.get(CREATE_ROUTE(`user/username/${username}`))\r\n            dispatch({\r\n                type: USER_GET_SUCCESS,\r\n                payload: {\r\n                    successMessage: \"success\",\r\n                    user: response.data\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_GET_FAIL,\r\n                payload: {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\actions\\messengerAction.js",["165"],[],"import axios from 'axios';\r\nimport { USER_LOGOUT, CONTACT_GET_SUCCESS, MESSAGE_GET_SUCCESS, MESSAGE_SEND_SUCCESS } from \"../types/messengerType\";\r\nimport consts from '../../consts'\r\nconst CREATE_ROUTE = consts.CREATE_ROUTE\r\nconst util = require(\"util\")\r\n\r\nexport const getContacts = (myId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(CREATE_ROUTE(`messenger/get-contacts/${myId}`));\r\n        dispatch({\r\n            type: CONTACT_GET_SUCCESS,\r\n            payload: {\r\n                contacts: response.data.contacts\r\n            }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const messageSend = (data) => async (dispatch) => {\r\n\r\n    try {\r\n        console.log(\"dispatch:\")\r\n        console.log(data)\r\n\r\n        const response = await axios.post(CREATE_ROUTE('messenger/send-message'), data);\r\n        dispatch({\r\n            type: MESSAGE_SEND_SUCCESS,\r\n            payload: {\r\n                message: response.data.message\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const messengerActionLogOut = () =>  () => {\r\n    return dispatch => dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\n\r\nexport const getMessage = (expertId, myId) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(CREATE_ROUTE(`messenger/get-message/${expertId}/${myId}`));\r\n            dispatch({\r\n\r\n                type: MESSAGE_GET_SUCCESS,\r\n                payload: {\r\n                    message: response.data.message\r\n                }\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(\"error:\" + error)\r\n        }\r\n    }\r\n}\r\n\r\n// Not in use\r\n// export const ImageMessageSend = (data) => async(dispatch)=>{\r\n\r\n//      try{\r\n//           const response = await axios.post('/api/messenger/image-message-send',data);\r\n//           dispatch({\r\n//                type: MESSAGE_SEND_SUCCESS,\r\n//                payload : {\r\n//                     message : response.data.message\r\n//                }\r\n//           })\r\n//      }catch (error){\r\n//           console.log(error.response.data);\r\n\r\n//      }\r\n\r\n// }\r\n\r\nexport const seenMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(CREATE_ROUTE('messenger/seen-message'), msg);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updateMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(CREATE_ROUTE('messenger/delivered-message'), msg);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n\r\n    }\r\n}\r\n","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\actions\\offerAction.js",["166","167","168","169","170","171"],[],"import axios from 'axios';\r\nimport { USER_LOGOUT, CONTACT_GET_SUCCESS, OFFER_GET_SUCCESS, OFFER_GET_SUCCESS_CLEAR, UPDATE_OFFER, UPDATE_CONTACT_OFFER, SOCKET_OFFER, OFFER_SEND_SUCCESS } from '../types/offerType';\r\nimport { USER_UPDATE_SUCCESS } from '../types/authType'\r\nimport consts from '../../consts'\r\nconst CREATE_ROUTE = consts.CREATE_ROUTE\r\nconst util = require(\"util\")\r\n\r\nexport const getOfferContacts = (myId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(CREATE_ROUTE(`offer/get-contacts/${myId}`));\r\n        dispatch({\r\n            type: CONTACT_GET_SUCCESS,\r\n            payload: {\r\n                contacts: response.data.contacts\r\n            }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const offerActionLogOut = () => {\r\n    return dispatch => dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\nexport const offerSend = (data) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(CREATE_ROUTE('offer/send-offer'), data);\r\n        dispatch({\r\n            type: OFFER_SEND_SUCCESS,\r\n            payload: {\r\n                offer: response.data.offer\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const getOffer = (expertId, myId) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(CREATE_ROUTE(`offer/get-offer/${expertId}/${myId}`));\r\n            dispatch({\r\n\r\n                type: OFFER_GET_SUCCESS,\r\n                payload: {\r\n                    offer: response.data.offer\r\n                }\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(\"error:\" + error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateOffer = (ofr) => async (dispatch) => {\r\n    console.log('hier hängts')\r\n    console.log(\"ofr:\")\r\n    console.log(ofr)\r\n    try {\r\n        const response = await axios.post(CREATE_ROUTE('offer/delivered-offer'), ofr);\r\n        console.log('response:')\r\n        console.log(response)\r\n        console.log('response.data:')\r\n        console.log(response.data);\r\n        dispatch({\r\n\r\n            type: OFFER_GET_SUCCESS,\r\n            payload: {\r\n                offer: response.data.offer\r\n            }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error.response.offer)\r\n    }\r\n}\r\n","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\types\\messengerType.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\types\\offerType.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\socketContext.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\index.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\reducers\\authReducer.js",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\reducers\\messengerReducer.js",["172"],[],"import { LOGOUT_SUCCESS, NEW_USER_ADD, NEW_USER_ADD_CLEAR, USER_LOGOUT, CONTACT_GET_SUCCESS, MESSAGE_GET_SUCCESS, MESSAGE_SEND_SUCCESS, SOCKET_MESSAGE, UPDATE_CONTACT_MESSAGE, MESSAGE_SEND_SUCCESS_CLEAR, SEEN_MESSAGE, DELIVERED_MESSAGE, UPDATE, MESSAGE_GET_SUCCESS_CLEAR, SEEN_ALL } from \"../types/messengerType\";\r\n\r\nconst messengerState = {\r\n     contacts: [],\r\n     message: [],\r\n     messageSendSuccess: false,\r\n     messageGetSuccess: false,\r\n     new_user_add: '',\r\n}\r\n\r\nexport const messengerReducer = (state = messengerState, action) => {\r\n     const { type, payload } = action;\r\n\r\n\r\n\r\n     if (type === CONTACT_GET_SUCCESS) {\r\n          return {\r\n               ...state,\r\n               contacts: payload.contacts\r\n          }\r\n     }\r\n\r\n     if (type === MESSAGE_GET_SUCCESS) {\r\n          return {\r\n               ...state,\r\n               messageGetSuccess: true,\r\n               message: payload.message\r\n          }\r\n     }\r\n\r\n     if (type === MESSAGE_SEND_SUCCESS) {\r\n          return {\r\n               ...state,\r\n               messageSendSuccess: true,\r\n               message: [...state.message, payload.message]\r\n          }\r\n     }\r\n\r\n     if (type === SOCKET_MESSAGE) {\r\n          return {\r\n               ...state,\r\n               message: [...state.message, payload.message]\r\n          }\r\n     }\r\n\r\n     if (type === UPDATE_CONTACT_MESSAGE) { // Ca bug ici\r\n          const index = state.contacts.findIndex(c => c.contactInfo._id === payload.messageInfo.receiverId || c.contactInfo._id === payload.messageInfo.senderId);\r\n\r\n          console.log(\"index:\")\r\n          console.log(index)\r\n          if(index != -1){\r\n               state.contacts[index].messageInfo = payload.messageInfo\r\n               state.contacts[index].messageInfo.status = payload.status;\r\n          }\r\n          \r\n          return state;\r\n     } \r\n\r\n     \r\n\r\n\r\n     if (type === MESSAGE_SEND_SUCCESS_CLEAR) {\r\n          return {\r\n               ...state,\r\n               messageSendSuccess: false\r\n          }\r\n     }\r\n\r\n\r\n     if (type === SEEN_MESSAGE) {\r\n          const index = state.contacts.findIndex(c => c.contactInfo._id === payload.messageInfo.receiverId || c.contactInfo._id === payload.messageInfo.senderId);\r\n          state.contacts[index].messageInfo.status = 'seen';\r\n          return {\r\n               ...state\r\n          };\r\n     }\r\n\r\n     if (type === DELIVERED_MESSAGE) {\r\n          const index = state.contacts.findIndex(c => c.contactInfo._id === payload.messageInfo.receiverId || c.contactInfo._id === payload.messageInfo.senderId);\r\n          state.contacts[index].messageInfo.status = 'delivered';\r\n          return {\r\n               ...state\r\n          };\r\n     }\r\n\r\n\r\n     if (type === UPDATE) {\r\n          const index = state.contacts.findIndex(c => c.contactInfo._id === payload.id);\r\n          if (state.contacts[index].messageInfo) {\r\n               state.contacts[index].messageInfo.status = 'seen';\r\n          }\r\n          return {\r\n               ...state\r\n          }\r\n     }\r\n\r\n     if (type === MESSAGE_GET_SUCCESS_CLEAR) {\r\n          return {\r\n               ...state,\r\n               messageGetSuccess: false\r\n          }\r\n     }\r\n\r\n     if (type === SEEN_ALL) {\r\n          const index = state.contacts.contactIndex(c => c.contactInfo._id === payload.receiverId);\r\n          state.contacts[index].messageInfo.status = 'seen';\r\n          return {\r\n               ...state\r\n          }\r\n     }\r\n\r\n     if (type === LOGOUT_SUCCESS) {\r\n          return {\r\n               ...state,\r\n               contacts: [],\r\n               message: [],\r\n               messageSendSuccess: false,\r\n               messageGetSuccess: false,\r\n\r\n          }\r\n     }\r\n\r\n     if (type === NEW_USER_ADD) {\r\n          return {\r\n               ...state,\r\n               new_user_add: payload.new_user_add\r\n          }\r\n     }\r\n\r\n     if (type === NEW_USER_ADD_CLEAR) {\r\n          return {\r\n               ...state,\r\n               new_user_add: ''\r\n          }\r\n     }\r\n     if (type === USER_LOGOUT) {\r\n          return {\r\n               ...state,\r\n               contacts: [],\r\n               message: [],\r\n               messageSendSuccess: false,\r\n               messageGetSuccess: false,\r\n               new_user_add: '',\r\n\r\n          }\r\n\r\n     }\r\n\r\n\r\n\r\n     return state;\r\n}","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\store\\reducers\\offerReducer.js",["173"],[],"import { USER_LOGOUT, OFFER_GET_SUCCESS, OFFER_SEND_SUCCESS_CLEAR, OFFER_GET_SUCCESS_CLEAR, CONTACT_GET_SUCCESS, DELIVERED_OFFER, UPDATE_OFFER, UPDATE_CONTACT_OFFER, SOCKET_OFFER, OFFER_SEND_SUCCESS } from '../types/offerType';\r\n\r\n\r\n\r\nconst offerState = {\r\n    offerContacts: [],\r\n    offer: [],\r\n    offerSendSuccess: false,\r\n    offerGetSuccess: false,\r\n    // price: 0,\r\n    // senderName: \"\",\r\n    // senderId: \"\",\r\n    // receiverId: \"\",\r\n    // status: \"\",\r\n}\r\n\r\nexport const offerReducer = (state = offerState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    if (type === CONTACT_GET_SUCCESS) {\r\n        return {\r\n            ...state,\r\n            offerContacts: payload.contacts\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (type === OFFER_GET_SUCCESS) {\r\n        return {\r\n            ...state,\r\n            offerGetSuccess: true,\r\n            offer: payload.offer\r\n        }\r\n    }\r\n\r\n    if (type === OFFER_SEND_SUCCESS) {\r\n        return {\r\n            ...state,\r\n            offerSendSuccess: true,\r\n            offer: payload.offer\r\n        }\r\n    }\r\n\r\n    if (type === SOCKET_OFFER) {\r\n        return {\r\n            ...state,\r\n            offer: payload.offer\r\n        }\r\n    }\r\n\r\n    if (type === UPDATE_CONTACT_OFFER) { // hier bug receiverId undefined\r\n        const index = state.offerContacts.findIndex(c => c.contactInfo._id === payload.offerInfo.receiverId || c.contactInfo._id === payload.offerInfo.senderId);\r\n        state.offerContacts[index].offerInfo = payload.offerInfo;\r\n        state.offerContacts[index].offerInfo.status = payload.status;\r\n        return state;\r\n    }\r\n\r\n\r\n\r\n    if (type === OFFER_SEND_SUCCESS_CLEAR) {\r\n        return {\r\n            ...state,\r\n            offerSendSuccess: false\r\n        }\r\n    }\r\n\r\n\r\n    if (type === DELIVERED_OFFER) {\r\n        const index = state.offerContacts.findIndex(c => c.contactInfo._id === payload.offerInfo.receiverId || c.contactInfo._id === payload.offerInfo.senderId);\r\n        state.offerContacts[index].offerInfo.status = 'delivered';\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n\r\n    if (type === USER_LOGOUT) {\r\n        return {\r\n            ...state,\r\n            offerContacts: [],\r\n            offer: [],\r\n            offerSendSuccess: false,\r\n            offerGetSuccess: false,\r\n        }\r\n    }\r\n\r\n\r\n    if (type === OFFER_GET_SUCCESS_CLEAR) {\r\n        return {\r\n            ...state,\r\n            offerGetSuccess: false\r\n        }\r\n    }\r\n\r\n\r\n    return state;\r\n}","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\ExpertProfile.jsx",["174","175","176","177","178","179","180","181","182"],[],"import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport Button from '@mui/material/Button';\r\nimport { FormControl, Switch } from \"@mui/material\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { FormHelperText } from \"@mui/material\";\r\nimport Axios from 'axios';\r\nimport consts from '../consts'\r\nconst TAG_COLORS = consts.TAG_COLORS\r\nconst RANDOM_COLOR = consts.RANDOM_COLOR\r\nconst CREATE_ROUTE = consts.CREATE_ROUTE\r\nconst util = require('util')\r\n\r\nconst styles = {\r\n    main: {\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    menuButton: {\r\n        fontWeight: 500,\r\n        fontSize: \"1em\",\r\n        color: \"#FFFFFF\",\r\n        backgroundColor: \"#063A5B\",\r\n    },\r\n    containerOne: {\r\n        maxWidth: \"30%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    username: {\r\n        display: 'flex',\r\n        fontSize: '4em'\r\n    },\r\n    mainExpertise: {\r\n        display: 'flex',\r\n        fontSize: '2em'\r\n    },\r\n    keywords: {\r\n        display: 'flex',\r\n        fontSize: '2em'\r\n    },\r\n    li: {\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingBottom: \"10px\",\r\n    },\r\n    ul: {\r\n        display: \"inline\",\r\n        paddingLeft: \"0.5rem\",\r\n        paddingRight: \"0.5rem\",\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        lineHeight: \"2rem\",\r\n        backgroundColor: \"green\",\r\n        margin: \"0.5rem\",\r\n        borderRadius: \"0.5rem\",\r\n    },\r\n\r\n}\r\nfunction ExpertProfile(props) {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    let expert = location.state.expert;\r\n\r\n    const handleSubmit = e => {\r\n        return navigate('/chat', { state: { expert: expert } })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={styles.main}>\r\n            <div style={styles.containerOne}>\r\n                <div style={styles.username}>\r\n                    {expert.username}\r\n                </div>\r\n                <div style={styles.mainExpertise}>\r\n                    {expert.mainExpertise}\r\n                </div>\r\n\r\n                <div style={styles.keywords}>\r\n                    <li style={styles.li}>\r\n                        {expert.keywords.map(kw => { return <ul style={{ ...styles.ul, backgroundColor: RANDOM_COLOR(TAG_COLORS) }} key={kw.word}>{kw.word.toLowerCase()}</ul> })}\r\n\r\n                    </li>\r\n                </div>\r\n                <div>\r\n                    1 Token / 15 Minutes\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                    >\r\n                        CONTACT ME\r\n                    </Button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ExpertProfile;","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Login.jsx",["183","184","185","186"],[],"import React, { useEffect, useState } from 'react';\r\nimport { FormControl } from \"@mui/material\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { FormHelperText } from \"@mui/material\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux' // dispatch actions to the store\r\nimport { userLogin } from '../store/actions/authActions';\r\n\r\nimport { CLEAR_ERROR } from '../store/types/authType';\r\n\r\n\r\nconst styles = {\r\n    main: {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"space-evenly\",\r\n        alignContent: \"center\"\r\n    },\r\n    text: {\r\n        header: {\r\n            fontSize: \"2em\",\r\n            marginTop: \"0.5em\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            color: \"#0F202A\"\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction Login(props) {\r\n\r\n    const [state, setState] = useState({\r\n        password: \"\",\r\n        problem: \"\",\r\n        username: \"\",\r\n        redirect: false\r\n    })\r\n    const dispatch = useDispatch();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { loading, authenticated, error, successMessage, user } = useSelector(state => state.auth);\r\n\r\n    const handleChange = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        login(state.username, state.password);\r\n    }\r\n\r\n    const login = async (username, password) => {\r\n        let data = {\r\n            username,\r\n            password\r\n        }\r\n        await dispatch(userLogin(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (authenticated) {\r\n            navigate(\"/search\")\r\n        }\r\n        if (error) {\r\n            alert(\"Error: No user with this combination of username and password found\")\r\n            dispatch({ type: 'CLEAR_ERROR' })   \r\n        }\r\n    }\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ marginLeft: \"4em\", marginRight: \"4em\" }}>\r\n                <div style={styles.text.header}>Log In</div>\r\n                <FormControl style={styles.main}>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            value={state.username}\r\n                            onChange={handleChange}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            style={{ width: \"100%\" }}\r\n                        />\r\n                        <FormHelperText id=\"my-helper-text\">Use your Username to log in.</FormHelperText>\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            value={state.password}\r\n                            onChange={handleChange}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            style={{ width: \"100%\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleSubmit}>\r\n                            Log In\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        {state.problem}\r\n                    </div>\r\n                </FormControl>\r\n            </div >\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Login;",[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\LandingPage.jsx",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Result.jsx",["187","188","189","190","191","192","193","194","195","196"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport { Button, List, ListItem } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport consts from '../consts';\r\nconst util = require('util')\r\nconst TAG_COLORS = consts.TAG_COLORS\r\nconst RANDOM_COLOR = consts.RANDOM_COLOR\r\n\r\nconst styles = {\r\n    main: {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        // backgroundColor: 'green',\r\n        border: '4px solid black',\r\n        minWidth: '400px',\r\n        maxWidth: '400px',\r\n        maxHeight: '400px',\r\n        minHeight: '400px',\r\n        alignItems: 'center',\r\n        justifyContent: 'start',\r\n        padding: '15px',\r\n\r\n        flexFlow: \"column\",\r\n    },\r\n    username: {\r\n        fontSize: '2em',\r\n        display: 'flex',\r\n        minHeight: '60px',\r\n        alignItems: 'center',\r\n    },\r\n    expertise: {\r\n        display: 'flex',\r\n        fontSize: '1.5em',\r\n        minHeight: '50px',\r\n        alignItems: 'center',\r\n    },\r\n    keywords: {\r\n        display: 'flex',\r\n        fontSize: '1em',\r\n        minHeight: '80px',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    keywords: {\r\n        display: 'flex',\r\n        fontSize: '1em',\r\n        minHeight: '20px',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        flex: \"0 1 30%\",\r\n        fontWeight: 500,\r\n        fontSize: \"1em\",\r\n        color: \"#FFFFFF\",\r\n        backgroundColor: \"#063A5B\",\r\n        width: \"60%\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    li: {\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingBottom: \"10px\",\r\n    },\r\n    ul: {\r\n        display: \"inline\",\r\n        paddingLeft: \"0.5rem\",\r\n        paddingRight: \"0.5rem\",\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        lineHeight: \"2rem\",\r\n        backgroundColor: \"green\",\r\n        margin: \"0.5rem\",\r\n        borderRadius: \"0.5rem\",\r\n    },\r\n}\r\n\r\nfunction Result(props) {\r\n    const [state, setState] = useState({\r\n        redirect: false,\r\n        result: null\r\n    })\r\n\r\n\r\n    const handleSubmit = (e, expert) => {\r\n        e.preventDefault();\r\n        let redirect = true\r\n        let result = expert\r\n        setState({ ...state, redirect, result })\r\n\r\n    }\r\n\r\n\r\n    const { redirect, result } = state;\r\n    const { kwList, setKwList } = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    // let keywordsList = props ? props.result.mainExpertiseKeywords.split(\";\") : []\r\n\r\n    // useEffect(() => {\r\n    //     debugger\r\n    //     let kwList = props ? props.result.keywords.map(kw => { return kw.word }) : []\r\n    // }, [props.result.keywords])\r\n\r\n    useEffect(() => {\r\n        if (redirect) {\r\n            return navigate('/expert', { state: { expert: props.result } })\r\n        }\r\n    }, [redirect])\r\n\r\n    return (\r\n        <div style={styles.main}>\r\n            <Box style={styles.box}>\r\n                <div style={styles.username}>\r\n                    {props.result.username}\r\n                </ div>\r\n                <div style={styles.expertise}>\r\n                    {props.result.mainExpertise}\r\n                </div>\r\n                <div style={styles.keywords}>\r\n                    {/* {props.result.mainExpertiseKeywords} */}\r\n                    <li style={styles.li}>\r\n                        {props.result.keywords.map(kw => { return <ul style={{ ...styles.ul, backgroundColor: RANDOM_COLOR(TAG_COLORS) }} key={kw.word}>{kw.word.toLowerCase()}</ul> })}\r\n\r\n                    </li>\r\n                </div>\r\n                <Button onClick={(e) => handleSubmit(e, props.result)} style={styles.button}>\r\n                    SEE MORE\r\n                </Button>\r\n                <div style={styles.tokens}>\r\n                    1 Token / 15 Minutes\r\n                </div>\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Result;","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Profile.jsx",["197","198","199","200","201","202","203","204","205","206","207","208","209"],[],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { FormControl, Switch } from \"@mui/material\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { FormHelperText } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import consts from '../consts'\r\nimport { userUpdate } from '../store/actions/authActions'\r\nimport { TagsInput } from \"react-tag-input-component\";\r\nconst util = require('util')\r\n\r\nconst tagColors = [\"#8CDFD6\", \"#1481BA\", \"#EEC584\", \"#2A7F62\", \"#BEA7E5\", \"#695958\", \"#B74F6F\"]\r\n\r\nconst randomColor = () => {\r\n    return tagColors[Math.floor(Math.random() * tagColors.length)];\r\n}\r\n\r\nconst styles = {\r\n    main: {\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    menuButton: {\r\n        fontWeight: 500,\r\n        fontSize: \"1em\",\r\n        color: \"#FFFFFF\",\r\n        backgroundColor: \"#063A5B\",\r\n    },\r\n    containerOne: {},\r\n    containerTwo: {},\r\n    li: {\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    ul: {\r\n        display: \"inline\",\r\n        paddingLeft: \"1rem\",\r\n        paddingRight: \"1rem\",\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        lineHeight: \"2.5rem\",\r\n        // backgroundColor: \"green\",\r\n        margin: \"1rem\",\r\n        borderRadius: \"1rem\",\r\n    },\r\n    button: {\r\n        marginTop: \"2rem\",\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction Profile(props) {\r\n\r\n    const [state, setState] = useState({\r\n        status: \"View\",\r\n        user: {\r\n            email: \"\",\r\n            password: \"\",\r\n            username: \"\",\r\n            usernameTaken: false,\r\n            emailTaken: false,\r\n            mainExpertise: \"\",\r\n            mainExpertiseKeywords: \"\",\r\n            keywords: [],\r\n            otherKeywords: \"\",\r\n            tokens: 0,\r\n        },\r\n        updateUser: {\r\n            email: \"\",\r\n            password: \"\",\r\n            username: \"\",\r\n            usernameTaken: false,\r\n            emailTaken: false,\r\n            mainExpertise: \"\",\r\n            mainExpertiseKeywords: \"\",\r\n            keywords: [],\r\n            otherKeywords: \"\",\r\n            tokens: 0,\r\n        }\r\n    })\r\n    const [tags, setTags] = useState([])\r\n    const [expertiseTag, setExpertiseTag] = useState([])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, authenticated, error, successMessage, user } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        let updateUser = user\r\n        setState({ ...state, user, updateUser })\r\n        let kw = []\r\n        user.keywords.map(keyword => {\r\n            kw.push(keyword.word.toLowerCase())\r\n        })\r\n        kw.length > 0 ? setTags(kw) : console.log('no keywords')\r\n    }, [user])\r\n\r\n    const handleChange = (event) => {\r\n        let updateUser = { ...state.updateUser }\r\n        updateUser[event.target.id] = event.target.value\r\n        setState({ ...state, updateUser })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        let status = state.status\r\n        event.preventDefault();\r\n\r\n        switch (status) {\r\n            case \"View\": {\r\n                status = \"Edit\"\r\n                setState({ ...state, status })\r\n            }; break;\r\n            case \"Edit\": {\r\n                updateUser()\r\n                // hier zu DB schicken\r\n                status = \"View\"\r\n                setState({ ...state, status })\r\n            }; break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const updateUser = () => {\r\n        let updateUser = { ...state.updateUser }\r\n        updateUser.keywords = tags\r\n        let oldKeywords = [...state.user.keywords]\r\n        let username = { ...state.user.username }\r\n        let data = { updateUser, username, oldKeywords }\r\n        dispatch(userUpdate(data))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormControl style={styles.main} >\r\n                <div style={styles.main}>\r\n                    <div style={styles.containerOne}>\r\n                        <div>\r\n                            <TextField\r\n                                disabled={true}\r\n                                error={state.updateUser.usernameTaken}\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                value={state.updateUser.username}\r\n                                onChange={handleChange}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                            <FormHelperText id=\"my-helper-text\">{state.updateUser.usernameTaken ? \"Username already taken\" : \"\"}</FormHelperText>\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                // disabled={state.status === \"View\" ? true : false}\r\n                                disabled={true}\r\n                                error={state.updateUser.emailTaken}\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                value={state.updateUser.email}\r\n                                onChange={handleChange}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                            <FormHelperText id=\"my-helper-text\">{state.updateUser.emailTaken ? \"An account with this e-mail address already exists\" : \"\"}</FormHelperText>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={styles.containerTwo}>\r\n\r\n                        <div>\r\n                            <TextField\r\n                                disabled={state.status === \"View\" ? true : true} // always disabled\r\n                                id=\"tokens\"\r\n                                label=\"Tokens\"\r\n                                value={state.updateUser.tokens}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                            {/* <FormHelperText id=\"my-helper-text\"></FormHelperText> */}\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                disabled={state.status === \"View\" ? true : false}\r\n                                id=\"mainExpertise\"\r\n                                label=\"Expertise\"\r\n                                value={state.updateUser.mainExpertise}\r\n                                onChange={handleChange}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n\r\n                            {/* <div>Enter Keywords separated by semicolons ;</div> */}\r\n                            {/* Hier vorschläge für schon existierende Stichwörter vorschlagen */}\r\n                            {/* <TextField\r\n                                multiline\r\n                                disabled={state.status === \"View\" ? true : false}\r\n                                id=\"mainExpertiseKeywords\"\r\n                                label=\"Keywords\"\r\n                                value={state.updateUser.mainExpertiseKeywords}\r\n                                onChange={handleChange}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                style={{ width: \"100%\" }}\r\n                            /> */}\r\n\r\n                            {/* Npm Package react-tag-input-component\r\n  */}\r\n                            <div>\r\n                                <h1>{state.status === \"View\" ? \"Tags\" : \"Add Tags\"}</h1>\r\n                                <li style={styles.li}>\r\n                                    {tags.map((tag, index) => (\r\n                                        <ul style={{ ...styles.ul, backgroundColor: randomColor() }} key={index}>{tag.toLowerCase()}</ul>\r\n                                    ))}\r\n\r\n                                </li>\r\n                                {state.status === \"View\" ? null : <div><TagsInput\r\n                                    value={tags}\r\n                                    onChange={setTags}\r\n                                    name=\"tags\"\r\n                                    placeHolder=\"enter tags\"\r\n                                />\r\n                                    <em>press enter to add new tag</em> </div>\r\n                                }\r\n                                {/* <TagsInput\r\n                                    value={tags}\r\n                                    onChange={setTags}\r\n                                    name=\"tags\"\r\n                                    placeHolder=\"enter tags\"\r\n                                /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div style={styles.button}>\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                // currentStatus=\"Edit\"\r\n                                onClick={(e) => handleSubmit(e)}>\r\n                                {state.status === \"View\" ? \"Edit\" : \"Save\"}\r\n                            </Button>\r\n\r\n                        </div>\r\n                        <div>\r\n                            {state.error}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Results.jsx",["210","211","212"],[],"import React, { Component, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Result from './Result';\r\nconst util = require('util')\r\nconst styles = {\r\n\r\n    main: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n        flexFlow: \"row\",\r\n        height: \"100%\",\r\n    }\r\n}\r\n\r\n\r\nfunction Results(props) {\r\n\r\n    const location = useLocation();\r\n\r\n\r\n    return (\r\n        <div style={styles.main}>\r\n            {location && location.state.results.length > 0 ? location.state.results.map((result, index) => {\r\n                return (<div key={index}>\r\n                    <Result result={result} key={index} />\r\n                </div>)\r\n            }) : <div>No results</div>}\r\n        </div>\r\n    )\r\n}\r\nexport default Results;","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\NavBar.jsx",["213","214","215","216","217","218"],[],"import React, { useEffect, useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport logo from '../Logo Group.png';\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport '../styles/navbar.css';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport { flexbox } from '@mui/system';\r\nimport { useDispatch, useSelector } from 'react-redux' // dispatch actions to the store\r\nimport { userLogout } from '../store/actions/authActions';\r\nimport { messengerActionLogOut } from '../store/actions/messengerAction';\r\nimport { offerActionLogOut } from '../store/actions/offerAction';\r\nconst pages = [{ label: \"Sign In\", href: \"/register\" }, { label: \"Log In\", href: \"/login\" }];\r\n\r\nconst styles = {\r\n    appbar: { backgroundColor: \"#0F202A\", height: 100 },\r\n    menuButton: {\r\n        fontWeight: 500,\r\n        size: \"18px\",\r\n        color: \"#FFFFFF\",\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    links: {\r\n        display: \"flex\",\r\n        // width: \"100%\",\r\n        // alignItems: \"center\",\r\n        // justifyContent: \"space-evenly\",\r\n    },\r\n    linksBox: {\r\n        display: 'flex',\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-evenly\"\r\n    }\r\n}\r\n\r\nfunction NavBar(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { loading, authenticated, error, successMessage, user } = useSelector(state => state.auth);\r\n\r\n    const logout = () => {\r\n        dispatch(userLogout())\r\n        dispatch(messengerActionLogOut())\r\n        dispatch(offerActionLogOut)\r\n        navigate(\"/\")\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <AppBar style={styles.appbar}>\r\n            <Toolbar style={styles.toolbar}>\r\n                <div>\r\n                    <RouterLink to=\"/\"> <img src={logo} alt=\"logo\" /></RouterLink>\r\n                </div>\r\n                {authenticated ?\r\n                    <span style={styles.linksBox}>\r\n                        <Button style={styles.menuButton}\r\n                            onClick={() => logout()}\r\n                        >Log Out</Button>\r\n                        <span >\r\n                            {user ? user.tokens : null} TOKENS\r\n                        </span >\r\n                        <RouterLink to={\"/chat\"}>\r\n                            <MessageIcon style={styles.menuButton} />\r\n                        </RouterLink>\r\n\r\n                        <RouterLink to={\"/profile\"} style={{ textDecoration: \"none\" }}>\r\n                            <Button style={styles.menuButton}>{user ? user.username : null}</Button>\r\n                        </RouterLink>\r\n                    </span>\r\n                    :\r\n                    <div style={styles.linksBox}>{\r\n\r\n                        (pages.map((page) => (\r\n                            <RouterLink to={page.href} key={page.label} style={{ textDecoration: \"none\" }}>\r\n                                <Button style={styles.menuButton}>{page.label}</Button>\r\n                            </RouterLink>)))\r\n                    }\r\n                    </div>}\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    )\r\n\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\SearchPage.jsx",["219","220","221"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from '@mui/material/Button';\r\nimport { Input } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Axios from 'axios';\r\nimport consts from '../consts'\r\nconst CREATE_ROUTE = consts.CREATE_ROUTE\r\nconst util = require('util')\r\n\r\n\r\nconst styles = {\r\n    main: {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    secondRow: {\r\n        justifyContent: \"space-evenly\",\r\n        display: \"flex\",\r\n        flexFlow: \"row\"\r\n    },\r\n    header: {\r\n        color: \"#063A5B\",\r\n        fontSize: \"3em\",\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        justifyContent: \"space-evenly\",\r\n        flex: \"0 1 10%\",\r\n    },\r\n    inputDiv: {\r\n        color: \"#063A5B\",\r\n        fontSize: \"2em\",\r\n        flex: \"0 1 60%\",\r\n    },\r\n    buttonDiv: {\r\n        flex: \"0 1 20%\",\r\n        alignSelf: \"center\"\r\n    },\r\n    menuButton: {\r\n        flex: \"0 1 30%\",\r\n        fontWeight: 500,\r\n        fontSize: \"1em\",\r\n        color: \"#FFFFFF\",\r\n        backgroundColor: \"#063A5B\",\r\n        width: \"60%\"\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n        fontSize: \"1em\",\r\n    },\r\n    icon: {\r\n        fontSize: \"2.5em\",\r\n        alignSelf: \"center\",\r\n    }\r\n\r\n}\r\nfunction SearchPage(props) {\r\n\r\n    const [state, setState] = useState({\r\n        redirect: false,\r\n        input: \"\",\r\n        results: []\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        setState({\r\n            ...state,\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let input = state.input\r\n        input = input.toLowerCase()\r\n        let searchTerms = input.split(\" \")\r\n\r\n\r\n        search(searchTerms);\r\n    }\r\n\r\n    const search = async (searchTerms) => {\r\n        let results = []\r\n\r\n        let response = await Axios.get(CREATE_ROUTE('user/search'), {\r\n            params: {\r\n                data: searchTerms\r\n            }\r\n        })\r\n\r\n        if (response.data) {\r\n            let results = state.results\r\n            let redirect = state.redirect\r\n            results = response.data\r\n            console.log(\"results\")\r\n            console.log(results)\r\n            redirect = true\r\n            setState({ ...state, results, redirect })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (state.redirect) {\r\n            return navigate('/results', { state: { results: state.results } })\r\n        }\r\n    }, [state.redirect])\r\n\r\n    return (\r\n        <div style={styles.main}>\r\n            <div style={styles.header} >\r\n                Find the expert to help you keep your project going\r\n            </div>\r\n            <div style={styles.secondRow}>\r\n                <SearchIcon style={styles.icon} />\r\n                <div style={styles.inputDiv}>\r\n                    <Input id=\"input\" onChange={handleChange} style={styles.input} type=\"search\" placeholder=\"Try “React Native navigation”\" />\r\n                </div>\r\n                <div style={styles.buttonDiv}>\r\n                    <RouterLink to=\"/results\" style={{ textDecoration: \"none\" }}>\r\n                        <Button\r\n                            onClick={handleSubmit}\r\n                            style={styles.menuButton}>Search</Button>\r\n                    </RouterLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SearchPage;","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\messenger\\Messenger.jsx",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],[],"\r\nimport React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Button } from '@mui/material';\r\n\r\nimport styles from '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\r\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, Sidebar, Search, ConversationList, Conversation, ExpansionPanel, ConversationHeader, VoiceCallButton, VideoCallButton, InfoButton, TypingIndicator, MessageSeparator } from '@chatscope/chat-ui-kit-react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { getContacts, messageSend, getMessage, ImageMessageSend, seenMessage, updateMessage, } from '../../store/actions/messengerAction';\r\nimport { getOfferContacts, getOffer, offerSend, updateOffer } from '../../store/actions/offerAction';\r\nimport { userGet } from '../../store/actions/authActions';\r\n\r\nimport { SocketContext } from '../../socketContext';\r\n\r\nimport { st as myStyles } from './styles'\r\nimport Offer from './Offer';\r\nconst util = require(\"util\")\r\n\r\n\r\nfunction Messenger(props) {\r\n    const socket = useContext(SocketContext)\r\n    const location = useLocation();\r\n\r\n    const dispatch = useDispatch();\r\n    const scrollRef = useRef();\r\n    // const socket = useRef();\r\n\r\n    const { contacts, message, messageSendSuccess, messageGetSuccess, new_user_add } = useSelector(state => state.messenger);\r\n    let expert = location.state ? location.state.expert : contacts && contacts.length > 0 ? contacts[0].contactInfo : \"\";\r\n    const { loading, authenticated, error, successMessage, user } = useSelector(state => state.auth);\r\n    const { offer, offerContacts, offerSendSuccess, offerGetSuccess } = useSelector(state => state.offer);\r\n    let myInfo = user\r\n\r\n\r\n    const [currentContact, setCurrentContact] = useState(expert);\r\n    const [socketMessage, setSocketMessage] = useState(\"\");\r\n    const [socketOffer, setSocketOffer] = useState(\"\");\r\n    const [activeUser, setActiveUser] = useState(\"\");\r\n    const [hide, setHide] = useState(true);\r\n\r\n    const [typingMessage, setTypingMessage] = useState('');\r\n\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    const [price, setPrice] = useState(0);\r\n    const [offerFromMe, setOfferFromMe] = useState(false);\r\n    const [newOffer, setNewOffer] = useState(false) // gibt es ein offer ? // Das alles in Redux\r\n\r\n    const [askerId, setAskerId] = useState(\"\")\r\n    const [answererId, setAnswererId] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        myInfo = user\r\n    }, [user])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('getMessage', (data) => {\r\n            setSocketMessage(data)\r\n        })\r\n\r\n        socket.on('getOffer', (data) => {\r\n            setSocketOffer(data)\r\n        })\r\n\r\n        socket.on('typingMessageGet', (data) => {\r\n            setTypingMessage(data)\r\n        })\r\n\r\n        socket.on('msgSeenResponse', msg => {\r\n            dispatch({\r\n                type: 'SEEN_MESSAGE',\r\n                payload: {\r\n                    messageInfo: msg\r\n                }\r\n            })\r\n        })\r\n\r\n        socket.on('msgDeliveredResponse', msg => {\r\n            dispatch({\r\n                type: 'DELIVERED_MESSAGE',\r\n                payload: {\r\n                    messageInfo: msg\r\n                }\r\n            })\r\n        })\r\n\r\n        socket.on('seenSuccess', data => {\r\n            dispatch({\r\n                type: 'SEEN_ALL',\r\n                payload: data\r\n            })\r\n        })\r\n\r\n        return () => { socket.current?.disconnect() }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        dispatch(getContacts(myId))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (socketMessage && currentContact !== \"\") {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            if (socketMessage.senderId === currentContact._id && socketMessage.receiverId === myId) {\r\n                dispatch({\r\n                    type: 'SOCKET_MESSAGE',\r\n                    payload: {\r\n                        message: socketMessage\r\n                    }\r\n                })\r\n                dispatch(seenMessage(socketMessage));\r\n                socket.emit('messageSeen', socketMessage);\r\n                dispatch({\r\n                    type: 'UPDATE_CONTACT_MESSAGE',\r\n                    payload: {\r\n                        messageInfo: socketMessage,\r\n                        status: 'seen'\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        setSocketMessage('')\r\n    }, [socketMessage]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (socketOffer && currentContact !== \"\") {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            if (socketOffer.senderId === currentContact._id && socketOffer.receiverId === myId) {\r\n                dispatch({\r\n                    type: 'SOCKET_OFFER',\r\n                    payload: {\r\n                        offer: socketOffer\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        setSocketOffer('')\r\n    }, [socketOffer]);\r\n\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        socket.emit('addUser', myId, myInfo)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on('getUser', (users) => {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            const activeUser = users.filter(u => u.userId !== myId)\r\n            setActiveUser(activeUser)\r\n        })\r\n\r\n        socket.on('new_user_add', data => {\r\n            dispatch({\r\n                type: 'NEW_USER_ADD',\r\n                payload: {\r\n                    new_user_add: data\r\n                }\r\n            })\r\n        })\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        if (socketMessage && socketMessage.senderId !== currentContact._id && socketMessage.receiverId === myId) {\r\n            //  notificationSPlay();\r\n            toast.success(`${socketMessage.senderName} Send a New Message`)\r\n            dispatch(updateMessage(socketMessage));\r\n            socket.emit('deliveredMessage', socketMessage);\r\n            dispatch({\r\n                type: 'UPDATE_CONTACT_MESSAGE',\r\n                payload: {\r\n                    messageInfo: socketMessage,\r\n                    status: 'delivered'\r\n                }\r\n            })\r\n\r\n        }\r\n    }, [socketMessage]);\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        if (socketOffer && socketOffer.senderId !== currentContact._id && socketOffer.receiverId === myId) {\r\n            toast.success(`${socketOffer.senderName} Send a New Offer`)\r\n            dispatch(updateOffer(socketOffer));\r\n            socket.emit('deliveredOffer', socketOffer);\r\n\r\n        }\r\n    }, [socketOffer]);\r\n\r\n\r\n    const handleInput = (newMessage) => { // TODO need main in here then\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        setNewMessage(newMessage)\r\n        socket.emit('typingMessage', {\r\n            senderId: myId,\r\n            receiverId: currentContact._id,\r\n            msg: newMessage\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (offerSendSuccess) {\r\n\r\n            let sendId\r\n            user.id ? sendId = user.id : sendId = user._id\r\n            socket.emit('sendOffer', {\r\n                senderName: user.username,\r\n                receiverId: currentContact._id,\r\n                offer: { price: price },\r\n                askerId: askerId,\r\n                senderId: sendId,\r\n                answererId: answererId,\r\n                status: \"false\"\r\n            })\r\n            dispatch({\r\n                type: 'OFFER_SEND_SUCCESS_CLEAR'\r\n            })\r\n        }\r\n    }, [offerSendSuccess])\r\n\r\n    const sendOffer = (type) => {\r\n\r\n        let askId\r\n        let answId\r\n        let myId\r\n        user.id ? myId = user.id : myId = user._id\r\n\r\n        if (type === 'asker') {\r\n            setAskerId(myId)\r\n            askId = myId\r\n            answId = currentContact._id\r\n            setAnswererId(currentContact._id)\r\n\r\n        } else {\r\n            askId = currentContact._id\r\n            setAskerId(currentContact._id)\r\n            answId = myId\r\n            setAnswererId(myId)\r\n        }\r\n\r\n\r\n\r\n        const data = {\r\n            senderName: user.username,\r\n            senderId: myId,\r\n            receiverId: currentContact._id,\r\n            offer: { price: price },\r\n            askerId: askId,\r\n            answererId: answId,\r\n            status: \"false\"\r\n        }\r\n\r\n        dispatch(offerSend(data));\r\n\r\n\r\n        socket.emit('sendOffer', {\r\n            senderName: user.username,\r\n            senderId: myId,\r\n            receiverId: currentContact._id,\r\n            offer: { price: price },\r\n            askerId: askId,\r\n            answererId: answId,\r\n            status: \"false\"\r\n        })\r\n\r\n\r\n        setNewOffer(true)\r\n        setOfferFromMe(true)\r\n    }\r\n\r\n    const sendMessage = (msg) => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n\r\n        const data = {\r\n            senderName: myInfo.username,\r\n            receiverId: currentContact._id,\r\n            message: newMessage ? newMessage : '❤',\r\n            senderId: myId\r\n        }\r\n\r\n        setTypingMessage('')\r\n\r\n        socket.emit('typingMessage', {\r\n            senderId: myId,\r\n            receiver: currentContact._id,\r\n            receiverId: currentContact._id,\r\n            msg: ''\r\n        })\r\n\r\n        dispatch(messageSend(data));\r\n        setNewMessage('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (messageSendSuccess) { // from redux state\r\n            socket.emit('sendMessage', message[message.length - 1]);\r\n            dispatch({\r\n                type: 'UPDATE_CONTACT_MESSAGE',\r\n                payload: {\r\n                    messageInfo: message[message.length - 1]\r\n                }\r\n            })\r\n            dispatch({\r\n                type: 'MESSAGE_SEND_SUCCESS_CLEAR'\r\n            })\r\n        }\r\n    }, [messageSendSuccess]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // let data = myInfo.id\r\n        console.log(myInfo)\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        dispatch(getContacts(myId))\r\n        dispatch({ type: 'NEW_USER_ADD_CLEAR' })\r\n    }, [new_user_add]);\r\n\r\n    useEffect(() => {\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        dispatch(getMessage(currentContact._id, myId));\r\n        dispatch(getOffer(currentContact._id, myId));\r\n    }, [currentContact?._id]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (message.length > 0) {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            if (message[message.length - 1].senderId !== myId && message[message.length - 1].status !== 'seen') {\r\n                dispatch({\r\n                    type: 'UPDATE',\r\n                    payload: {\r\n                        id: currentContact._id\r\n                    }\r\n                })\r\n                socket.emit('seen', { senderId: currentContact._id, receiverId: myId })\r\n                dispatch(seenMessage({ _id: message[message.length - 1]._id }))\r\n            }\r\n        }\r\n        dispatch({\r\n            type: 'MESSAGE_GET_SUCCESS_CLEAR'\r\n        })\r\n\r\n    }, [messageGetSuccess]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: 'smooth' })\r\n    }, [message]);\r\n\r\n    const updatePrice = (updateDirection) => {\r\n        let newPrice\r\n        let oldPrice = price\r\n        if (updateDirection === \"up\") {\r\n\r\n            newPrice = ++oldPrice\r\n            setPrice(newPrice)\r\n        }\r\n        if (updateDirection === \"down\") {\r\n            newPrice = --oldPrice\r\n            setPrice(newPrice)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (<div>\r\n        <Toaster // notification\r\n            position={'top-right'}\r\n            reverseOrder={false}\r\n            toastOptions={{\r\n                style: {\r\n                    display: 'absolute',\r\n                    fontSize: '18px'\r\n                }\r\n            }}\r\n\r\n        />\r\n        <div style={myStyles.container}>\r\n            <Offer currentContact={currentContact} />\r\n            <div style={myStyles.main}>\r\n\r\n                <MainContainer responsive style={{ width: '100%' }}>\r\n                    <Sidebar position=\"left\" scrollable={true}>\r\n                        {/* <Search placeholder=\"Search...\" /> */}\r\n                        <ConversationList>\r\n\r\n                            {contacts && contacts.length > 0 ? contacts.map((contact, index) =>\r\n                                contact.messageInfo ?\r\n                                    <Conversation\r\n                                        key={index}\r\n                                        onClick={() => { setCurrentContact(contact.contactInfo) }}\r\n                                        active={currentContact._id === contact.contactInfo._id ? true : false}\r\n                                        // activeUser={activeUser} \r\n                                        name={contact.contactInfo.username} info={contact.messageInfo ? contact.messageInfo.message.text : \"no messages yet\"}>\r\n\r\n                                    </Conversation> : null\r\n                            ) : <Conversation name={\"No Contacts\"} info=\"No Messages\">\r\n\r\n                            </Conversation>}\r\n\r\n                        </ConversationList>\r\n                    </Sidebar>\r\n\r\n                    <ChatContainer>\r\n                        <ConversationHeader>\r\n                            <ConversationHeader.Back />\r\n                            {/* <Avatar src={zoeIco} name=\"Zoe\" /> */}\r\n                            <ConversationHeader.Content userName={currentContact.username}\r\n                            // info=\"Active 10 mins ago\" \r\n                            />\r\n                            <ConversationHeader.Actions>\r\n                                <VoiceCallButton />\r\n                                <VideoCallButton />\r\n                                <InfoButton />\r\n                            </ConversationHeader.Actions>\r\n                        </ConversationHeader>\r\n                        <MessageList typingIndicator={typingMessage.msg ? <TypingIndicator content={currentContact.username + \" is typing\"} /> : false} >\r\n                            {/* \r\n                        {typingMessage.senderId === currentContact._id ? <TypingIndicator content=\" is typing\" /> : null} */}\r\n\r\n\r\n                            {/* <MessageSeparator content=\"Saturday, 30 November 2019\" /> */}\r\n                            {message && message.length > 0 ?\r\n\r\n                                message.map((msg, index) =>\r\n                                (msg.senderId === myInfo.id || msg.senderId === myInfo._id ?\r\n                                    < Message key={index}\r\n                                        model={{\r\n                                            message: msg.message.text,\r\n                                            sentTime: \"15 mins ago\",\r\n                                            sender: msg.senderName,\r\n                                            direction: \"outgoing\",\r\n                                            position: \"normal\"\r\n                                        }} avatarSpacer /> :\r\n                                    <Message key={index}\r\n                                        model={{\r\n                                            message: msg.message.text,\r\n                                            sentTime: \"15 mins ago\",\r\n                                            sender: msg.senderName,\r\n                                            direction: \"incoming\",\r\n                                            position: \"single\"\r\n                                        }} avatarSpacer />\r\n                                ))\r\n\r\n                                : null}\r\n\r\n                        </MessageList>\r\n                        <MessageInput placeholder=\"Type message here\"\r\n                            onSend={(e) => sendMessage(e)}\r\n                            onChange={(e) => handleInput(e)}\r\n                        />\r\n                    </ChatContainer>\r\n\r\n                    <Sidebar position=\"right\" style={styles.sidebar}>\r\n                        <ExpansionPanel open title=\"Create new offer\">\r\n                            <div style={styles.offerContainer}>\r\n                                <div style={styles.offerButtons}>\r\n                                    <Button style={styles.button} onClick={() => updatePrice(\"down\")}>-</Button>\r\n                                    <div style={styles.price}>{price}</div>\r\n                                    <Button style={styles.button} onClick={() => updatePrice(\"up\")}>+</Button>\r\n\r\n                                </div>\r\n                                <Button style={styles.button} onClick={(e) => sendOffer(\"asker\")}>Send Offer (I need help!) </Button>\r\n                                <Button style={styles.button} onClick={(e) => sendOffer(\"answerer\")}>Send Offer (I'll help!)</Button>\r\n                            </div>\r\n                        </ExpansionPanel>\r\n                        {/* <ExpansionPanel open title=\"Older Offers\">\r\n                        \r\n\r\n                            {offerContacts && offerContacts.length > 0 ? offerContacts.map((contact, index) => {\r\n                                <div>\r\n                                    <div>\r\n\r\n                                         asker : {contact.offerInfo.askerId} \r\n                    </div>\r\n                    <div>\r\n                        price : {contact.offerInfo.offer.price}\r\n\r\n                    </div>\r\n                    <div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        status : {contact.offerInfo.status}\r\n                    </div>\r\n            </div>\r\n                            }) : null}\r\n\r\n        </ExpansionPanel> */}\r\n                    </Sidebar>\r\n                </MainContainer >\r\n            </div >\r\n        </div ></div >\r\n    )\r\n}\r\nexport default Messenger;\r\n","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\messenger\\Offer.jsx",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269"],[],"import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport { st as myStyles } from './styles'\r\nimport { Button } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getOfferContacts, getOffer, offerSend, updateOffer } from '../../store/actions/offerAction';\r\nimport { userGet } from '../../store/actions/authActions';\r\nimport { SocketContext } from '../../socketContext'\r\n\r\nfunction Offer(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const socket = useContext(SocketContext);\r\n\r\n    const { loading, authenticated, error, successMessage, user } = useSelector(state => state.auth);\r\n    const { offer, offerContacts, offerSendSuccess, offerGetSuccess } = useSelector(state => state.offer);\r\n    let myInfo = user\r\n\r\n    const [socketOffer, setSocketOffer] = useState('');\r\n    let currentContact = props.currentContact;\r\n\r\n    useEffect(() => {\r\n        myInfo = user\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        socket.on('getOffer', (data) => { // OK\r\n            dispatch({\r\n                type: 'OFFER_GET_SUCCESS',\r\n                payload: {\r\n                    offer: data\r\n                }\r\n            })\r\n            dispatch(userGet(myInfo))\r\n\r\n        })\r\n\r\n        socket.on('ofrDeliveredResponse', ofr => {\r\n            dispatch({\r\n                type: 'DELIVERED_OFFER',\r\n                payload: {\r\n                    offerInfo: ofr\r\n                }\r\n            })\r\n        })\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socketOffer && currentContact !== \"\") {\r\n            let myId = myInfo.id ? myInfo.id : myInfo._id\r\n            if (socketOffer.senderId === currentContact._id && socketOffer.receiverId === myId) {\r\n                dispatch({\r\n                    type: 'SOCKET_OFFER',\r\n                    payload: {\r\n                        offer: socketOffer\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        setSocketOffer('')\r\n    }, [socketOffer]);\r\n\r\n    const respondToOffer = (response) => {\r\n        let status\r\n        response === 'accept' ? status = 'accepted' : status = 'declined'\r\n\r\n        let myId = myInfo.id ? myInfo.id : myInfo._id\r\n        const data = { ...offer, status: status }\r\n\r\n\r\n        dispatch(updateOffer(data)).then((res) => {\r\n\r\n            dispatch(userGet(myInfo))\r\n        })\r\n\r\n\r\n\r\n        socket.emit('respondToOffer', {\r\n            senderId: myId,\r\n            askerId: offer.askerId,\r\n            answererId: offer.answererId,\r\n            senderName: myInfo.username,\r\n            receiverId: currentContact._id,\r\n            offer: { price: offer.offer.price },\r\n            status: status,\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (<div style={myStyles.offer}>\r\n        {offer?.offer ?\r\n            <div>\r\n                <div>\r\n                    {offer.status === \"false\" ? <span>\r\n                        {offer.senderName === myInfo.username ? <span>Offer send</span>\r\n                            : <span>Offer received</span>}\r\n                    </span>\r\n                        :\r\n                        <span>\r\n                            {offer.status === 'accepted' ? <span>Offer accepted</span> :\r\n                                <span>\r\n                                    {offer.status === \"false\" ? <span>Offer delivered</span> : <span>Offer declined</span>}\r\n                                </span>\r\n                            }\r\n                        </span>}\r\n                </div>\r\n                <div>\r\n                    {offer.status === \"false\" ?\r\n                        (offer.askerId === myInfo.id || offer.askerId === myInfo._id) ? <span>You will pay {offer.offer.price} tokens in order for {currentContact.username} to help you. </span>\r\n                            : <span>You will receive {offer.offer.price} tokens in order to help {currentContact.username}.</span>\r\n                        : <span>{offer.status === 'declined' ? <span></span> :\r\n\r\n                            (offer.askerId === myInfo.id || offer.askerId === myInfo._id) ? <span>You paid {currentContact.username} {offer.offer.price} tokens. </span>\r\n                                : <span>You received {offer.offer.price} tokens to help {currentContact.username}.</span>\r\n                        }\r\n                        </span>\r\n                    }\r\n\r\n                </div>\r\n                <div>\r\n                    {offer.status === \"false\" ? <span>\r\n                        {offer.senderName === myInfo.username ? <span>... Waiting for an answer</span>\r\n                            : <span>\r\n                                <Button onClick={(e) => { respondToOffer('accept') }}> Accept </Button>\r\n                                <Button onClick={(e) => { respondToOffer('decline') }}> Decline </Button>\r\n                            </span>\r\n                        }</span>\r\n                        : null}\r\n                </div>\r\n\r\n            </div>\r\n            : null\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Offer;","C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\messenger\\styles.jsx",[],[],"C:\\Users\\LeahC\\OneDrive\\Documents\\AKAD\\ABSCHLUSS BAK PROJ BACH\\PROJEKT\\ProjectCode\\keep-going-react-app\\frontend\\src\\Components\\Signup.jsx",["270","271","272","273","274","275"],[],"import React, { useEffect, useState } from 'react';\r\nimport { FormControl } from \"@mui/material\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { FormHelperText } from \"@mui/material\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport consts from '../consts'\r\nimport { userLogin } from '../store/actions/authActions';\r\nimport { useDispatch } from 'react-redux' // dispatch actions to the store\r\nimport { userRegister } from '../store/actions/authActions';\r\nimport { useSelector } from 'react-redux';\r\nconst CREATE_ROUTE = consts.CREATE_ROUTE\r\nconst styles = {\r\n    main: {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"space-evenly\",\r\n        alignContent: \"center\"\r\n    },\r\n    text: {\r\n        header: {\r\n            fontSize: \"2em\",\r\n            marginTop: \"0.5em\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            color: \"#0F202A\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction Signup(props) {\r\n\r\n    const [state, setState] = useState({\r\n        newUser: {\r\n            email: \"\",\r\n            password: \"\",\r\n            username: \"\",\r\n            usernameTaken: false,\r\n            emailTaken: false,\r\n            mainExpertise: \"\",\r\n            mainExpertiseKeywords: \"\",\r\n            keywords: [],\r\n            otherKeywords: \"\",\r\n            tokens: 50,\r\n        },\r\n        confirmPassword: \"\",\r\n    })\r\n    const { loading, authenticated, error, successMessage, user } = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleChange = async (event) => {\r\n        let newUser = { ...state.newUser }\r\n        switch (event.target.id) {\r\n            case \"username\": handleUsername(event.target.value); break;\r\n            case \"email\": handleEmail(event.target.value); break;\r\n            case \"password\": {\r\n                newUser.password = event.target.value;\r\n                setState({\r\n                    ...state,\r\n                    newUser\r\n                })\r\n\r\n            }; break;\r\n            case \"confirmPassword\": {\r\n                let confirmPassword = event.target.value;\r\n                setState({\r\n                    ...state,\r\n                    confirmPassword\r\n                })\r\n\r\n            };\r\n                break;\r\n            default: setState({\r\n                ...state,\r\n                newUser\r\n            }); break;\r\n        }\r\n    }\r\n\r\n    const handleUsername = async inputUsernameValue => {\r\n\r\n        let newUser = { ...state.newUser }\r\n        newUser.username = inputUsernameValue\r\n\r\n        setState({\r\n            ...state,\r\n            newUser\r\n        })\r\n\r\n        if (inputUsernameValue) {\r\n            let response = await Axios.get(CREATE_ROUTE(`user/username/${inputUsernameValue}`)) // Later in Auth Actions\r\n            if (response.data) {\r\n                newUser.usernameTaken = true\r\n            } else {\r\n                newUser.usernameTaken = false\r\n            }\r\n        }\r\n        setState({\r\n            ...state,\r\n            newUser\r\n        })\r\n    }\r\n\r\n    const handleEmail = async inputEmailValue => {\r\n        let newUser = { ...state.newUser }\r\n        newUser.email = inputEmailValue\r\n\r\n        setState({\r\n            ...state,\r\n            newUser\r\n        })\r\n\r\n\r\n        if (inputEmailValue) {\r\n            let response = await Axios.get(CREATE_ROUTE(`user/email/${inputEmailValue}`)) // Later in Auth Actions\r\n\r\n            if (response.data) {\r\n                newUser.emailTaken = true\r\n            } else {\r\n                newUser.emailTaken = false\r\n            }\r\n        }\r\n        setState({ ...state, newUser })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        let newUser = { ...state.newUser }\r\n\r\n        if (newUser.password !== state.confirmPassword) {\r\n\r\n            setState({\r\n                ...state,\r\n                error: \"Passwords do not match\"\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (newUser.username && newUser.email && newUser.password && !newUser.usernameTaken && !newUser.emailTaken && newUser.password === state.confirmPassword) {\r\n            signUp();\r\n        }\r\n    }\r\n\r\n    // To do: use function from authActions (reducer)\r\n    // Should I use FormData ?\r\n    const signUp = async () => {\r\n        let userData = { ...state.newUser }\r\n\r\n        await dispatch(userRegister(userData))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (authenticated) {\r\n            navigate(\"/search\")\r\n        }\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch({ type: 'CLEAR_ERROR' })\r\n        }\r\n    })\r\n\r\n    return (\r\n        < div >\r\n            <div style={{ marginLeft: \"4em\", marginRight: \"4em\" }}>\r\n                <div style={styles.text.header}>Sign Up</div>\r\n                <FormControl style={styles.main} >\r\n                    <div>\r\n                        <TextField\r\n                            error={state.newUser.usernameTaken}\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            value={state.newUser.username}\r\n                            onChange={handleChange}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            style={{ width: \"100%\" }}\r\n                        />\r\n                        <FormHelperText id=\"my-helper-text\">{state.newUser.usernameTaken ? \"Username already taken\" : \"\"}</FormHelperText>\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            error={state.newUser.emailTaken}\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            value={state.newUser.email}\r\n                            onChange={handleChange}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            style={{ width: \"100%\" }}\r\n                        />\r\n                        <FormHelperText id=\"my-helper-text\">{state.newUser.emailTaken ? \"An account with this e-mail address already exists\" : \"\"}</FormHelperText>\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            value={state.newUser.password}\r\n                            onChange={handleChange}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            style={{ width: \"100%\" }}\r\n                        />\r\n                        <FormHelperText id=\"my-helper-text\">Chose a strong password.</FormHelperText>\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"confirmPassword\"\r\n                            label=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            value={state.confirmPassword}\r\n                            onChange={handleChange}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            style={{ width: \"100%\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleSubmit}>\r\n                            Sign Up\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        {state.error}\r\n                    </div>\r\n                </FormControl>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Signup;",{"ruleId":"276","severity":1,"message":"277","line":19,"column":10,"nodeType":"278","messageId":"279","endLine":19,"endColumn":19},{"ruleId":"276","severity":1,"message":"280","line":23,"column":7,"nodeType":"278","messageId":"279","endLine":23,"endColumn":19},{"ruleId":"276","severity":1,"message":"281","line":31,"column":10,"nodeType":"278","messageId":"279","endLine":31,"endColumn":15},{"ruleId":"276","severity":1,"message":"282","line":31,"column":17,"nodeType":"278","messageId":"279","endLine":31,"endColumn":25},{"ruleId":"276","severity":1,"message":"283","line":49,"column":11,"nodeType":"278","messageId":"279","endLine":49,"endColumn":18},{"ruleId":"276","severity":1,"message":"284","line":49,"column":35,"nodeType":"278","messageId":"279","endLine":49,"endColumn":40},{"ruleId":"276","severity":1,"message":"285","line":49,"column":42,"nodeType":"278","messageId":"279","endLine":49,"endColumn":56},{"ruleId":"276","severity":1,"message":"286","line":49,"column":58,"nodeType":"278","messageId":"279","endLine":49,"endColumn":62},{"ruleId":"287","severity":1,"message":"288","line":65,"column":6,"nodeType":"289","endLine":65,"endColumn":8,"suggestions":"290"},{"ruleId":"276","severity":1,"message":"291","line":3,"column":72,"nodeType":"278","messageId":"279","endLine":3,"endColumn":83},{"ruleId":"276","severity":1,"message":"292","line":5,"column":7,"nodeType":"278","messageId":"279","endLine":5,"endColumn":11},{"ruleId":"276","severity":1,"message":"292","line":5,"column":7,"nodeType":"278","messageId":"279","endLine":5,"endColumn":11},{"ruleId":"276","severity":1,"message":"293","line":2,"column":63,"nodeType":"278","messageId":"279","endLine":2,"endColumn":86},{"ruleId":"276","severity":1,"message":"294","line":2,"column":88,"nodeType":"278","messageId":"279","endLine":2,"endColumn":100},{"ruleId":"276","severity":1,"message":"295","line":2,"column":102,"nodeType":"278","messageId":"279","endLine":2,"endColumn":122},{"ruleId":"276","severity":1,"message":"296","line":2,"column":124,"nodeType":"278","messageId":"279","endLine":2,"endColumn":136},{"ruleId":"276","severity":1,"message":"297","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":29},{"ruleId":"276","severity":1,"message":"292","line":6,"column":7,"nodeType":"278","messageId":"279","endLine":6,"endColumn":11},{"ruleId":"298","severity":1,"message":"299","line":51,"column":20,"nodeType":"300","messageId":"301","endLine":51,"endColumn":22},{"ruleId":"276","severity":1,"message":"294","line":1,"column":131,"nodeType":"278","messageId":"279","endLine":1,"endColumn":143},{"ruleId":"276","severity":1,"message":"302","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"303","line":4,"column":10,"nodeType":"278","messageId":"279","endLine":4,"endColumn":21},{"ruleId":"276","severity":1,"message":"304","line":4,"column":23,"nodeType":"278","messageId":"279","endLine":4,"endColumn":29},{"ruleId":"276","severity":1,"message":"305","line":5,"column":10,"nodeType":"278","messageId":"279","endLine":5,"endColumn":19},{"ruleId":"276","severity":1,"message":"306","line":6,"column":10,"nodeType":"278","messageId":"279","endLine":6,"endColumn":24},{"ruleId":"276","severity":1,"message":"307","line":7,"column":8,"nodeType":"278","messageId":"279","endLine":7,"endColumn":13},{"ruleId":"276","severity":1,"message":"280","line":11,"column":7,"nodeType":"278","messageId":"279","endLine":11,"endColumn":19},{"ruleId":"276","severity":1,"message":"292","line":12,"column":7,"nodeType":"278","messageId":"279","endLine":12,"endColumn":11},{"ruleId":"308","severity":1,"message":"309","line":59,"column":9,"nodeType":"310","messageId":"301","endLine":59,"endColumn":16},{"ruleId":"276","severity":1,"message":"291","line":10,"column":10,"nodeType":"278","messageId":"279","endLine":10,"endColumn":21},{"ruleId":"276","severity":1,"message":"283","line":44,"column":13,"nodeType":"278","messageId":"279","endLine":44,"endColumn":20},{"ruleId":"276","severity":1,"message":"285","line":44,"column":44,"nodeType":"278","messageId":"279","endLine":44,"endColumn":58},{"ruleId":"276","severity":1,"message":"286","line":44,"column":60,"nodeType":"278","messageId":"279","endLine":44,"endColumn":64},{"ruleId":"276","severity":1,"message":"311","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":18},{"ruleId":"276","severity":1,"message":"312","line":3,"column":18,"nodeType":"278","messageId":"279","endLine":3,"endColumn":22},{"ruleId":"276","severity":1,"message":"313","line":3,"column":24,"nodeType":"278","messageId":"279","endLine":3,"endColumn":32},{"ruleId":"276","severity":1,"message":"292","line":6,"column":7,"nodeType":"278","messageId":"279","endLine":6,"endColumn":11},{"ruleId":"308","severity":1,"message":"314","line":48,"column":5,"nodeType":"310","messageId":"301","endLine":48,"endColumn":13},{"ruleId":"308","severity":1,"message":"309","line":76,"column":9,"nodeType":"310","messageId":"301","endLine":76,"endColumn":16},{"ruleId":"276","severity":1,"message":"315","line":103,"column":23,"nodeType":"278","messageId":"279","endLine":103,"endColumn":29},{"ruleId":"276","severity":1,"message":"316","line":104,"column":13,"nodeType":"278","messageId":"279","endLine":104,"endColumn":19},{"ruleId":"276","severity":1,"message":"317","line":104,"column":21,"nodeType":"278","messageId":"279","endLine":104,"endColumn":30},{"ruleId":"287","severity":1,"message":"318","line":118,"column":8,"nodeType":"289","endLine":118,"endColumn":18,"suggestions":"319"},{"ruleId":"276","severity":1,"message":"304","line":3,"column":23,"nodeType":"278","messageId":"279","endLine":3,"endColumn":29},{"ruleId":"276","severity":1,"message":"292","line":10,"column":7,"nodeType":"278","messageId":"279","endLine":10,"endColumn":11},{"ruleId":"308","severity":1,"message":"309","line":45,"column":9,"nodeType":"310","messageId":"301","endLine":45,"endColumn":16},{"ruleId":"276","severity":1,"message":"320","line":91,"column":12,"nodeType":"278","messageId":"279","endLine":91,"endColumn":24},{"ruleId":"276","severity":1,"message":"321","line":91,"column":26,"nodeType":"278","messageId":"279","endLine":91,"endColumn":41},{"ruleId":"276","severity":1,"message":"283","line":95,"column":13,"nodeType":"278","messageId":"279","endLine":95,"endColumn":20},{"ruleId":"276","severity":1,"message":"322","line":95,"column":22,"nodeType":"278","messageId":"279","endLine":95,"endColumn":35},{"ruleId":"276","severity":1,"message":"284","line":95,"column":37,"nodeType":"278","messageId":"279","endLine":95,"endColumn":42},{"ruleId":"276","severity":1,"message":"285","line":95,"column":44,"nodeType":"278","messageId":"279","endLine":95,"endColumn":58},{"ruleId":"323","severity":1,"message":"324","line":101,"column":35,"nodeType":"325","messageId":"326","endLine":101,"endColumn":37},{"ruleId":"287","severity":1,"message":"327","line":105,"column":8,"nodeType":"289","endLine":105,"endColumn":14,"suggestions":"328"},{"ruleId":"329","severity":1,"message":"330","line":118,"column":26,"nodeType":"331","messageId":"332","endLine":121,"endColumn":14},{"ruleId":"329","severity":1,"message":"330","line":122,"column":26,"nodeType":"331","messageId":"332","endLine":127,"endColumn":14},{"ruleId":"276","severity":1,"message":"333","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"334","line":1,"column":28,"nodeType":"278","messageId":"279","endLine":1,"endColumn":37},{"ruleId":"276","severity":1,"message":"292","line":4,"column":7,"nodeType":"278","messageId":"279","endLine":4,"endColumn":11},{"ruleId":"276","severity":1,"message":"334","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"302","line":1,"column":28,"nodeType":"278","messageId":"279","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"335","line":9,"column":10,"nodeType":"278","messageId":"279","endLine":9,"endColumn":17},{"ruleId":"276","severity":1,"message":"283","line":47,"column":13,"nodeType":"278","messageId":"279","endLine":47,"endColumn":20},{"ruleId":"276","severity":1,"message":"284","line":47,"column":37,"nodeType":"278","messageId":"279","endLine":47,"endColumn":42},{"ruleId":"276","severity":1,"message":"285","line":47,"column":44,"nodeType":"278","messageId":"279","endLine":47,"endColumn":58},{"ruleId":"276","severity":1,"message":"292","line":10,"column":7,"nodeType":"278","messageId":"279","endLine":10,"endColumn":11},{"ruleId":"276","severity":1,"message":"336","line":88,"column":13,"nodeType":"278","messageId":"279","endLine":88,"endColumn":20},{"ruleId":"287","severity":1,"message":"337","line":111,"column":8,"nodeType":"289","endLine":111,"endColumn":24,"suggestions":"338"},{"ruleId":"276","severity":1,"message":"339","line":7,"column":85,"nodeType":"278","messageId":"279","endLine":7,"endColumn":91},{"ruleId":"276","severity":1,"message":"340","line":7,"column":224,"nodeType":"278","messageId":"279","endLine":7,"endColumn":240},{"ruleId":"276","severity":1,"message":"341","line":11,"column":48,"nodeType":"278","messageId":"279","endLine":11,"endColumn":64},{"ruleId":"276","severity":1,"message":"342","line":12,"column":10,"nodeType":"278","messageId":"279","endLine":12,"endColumn":26},{"ruleId":"276","severity":1,"message":"343","line":13,"column":10,"nodeType":"278","messageId":"279","endLine":13,"endColumn":17},{"ruleId":"276","severity":1,"message":"292","line":19,"column":7,"nodeType":"278","messageId":"279","endLine":19,"endColumn":11},{"ruleId":"276","severity":1,"message":"283","line":32,"column":13,"nodeType":"278","messageId":"279","endLine":32,"endColumn":20},{"ruleId":"276","severity":1,"message":"322","line":32,"column":22,"nodeType":"278","messageId":"279","endLine":32,"endColumn":35},{"ruleId":"276","severity":1,"message":"284","line":32,"column":37,"nodeType":"278","messageId":"279","endLine":32,"endColumn":42},{"ruleId":"276","severity":1,"message":"285","line":32,"column":44,"nodeType":"278","messageId":"279","endLine":32,"endColumn":58},{"ruleId":"276","severity":1,"message":"344","line":33,"column":13,"nodeType":"278","messageId":"279","endLine":33,"endColumn":18},{"ruleId":"276","severity":1,"message":"345","line":33,"column":20,"nodeType":"278","messageId":"279","endLine":33,"endColumn":33},{"ruleId":"276","severity":1,"message":"346","line":33,"column":53,"nodeType":"278","messageId":"279","endLine":33,"endColumn":68},{"ruleId":"276","severity":1,"message":"347","line":40,"column":12,"nodeType":"278","messageId":"279","endLine":40,"endColumn":22},{"ruleId":"276","severity":1,"message":"348","line":41,"column":12,"nodeType":"278","messageId":"279","endLine":41,"endColumn":16},{"ruleId":"276","severity":1,"message":"349","line":41,"column":18,"nodeType":"278","messageId":"279","endLine":41,"endColumn":25},{"ruleId":"276","severity":1,"message":"350","line":48,"column":12,"nodeType":"278","messageId":"279","endLine":48,"endColumn":23},{"ruleId":"276","severity":1,"message":"351","line":49,"column":12,"nodeType":"278","messageId":"279","endLine":49,"endColumn":20},{"ruleId":"287","severity":1,"message":"352","line":55,"column":18,"nodeType":"278","endLine":55,"endColumn":22},{"ruleId":"287","severity":1,"message":"353","line":98,"column":31,"nodeType":"278","endLine":98,"endColumn":38},{"ruleId":"287","severity":1,"message":"354","line":99,"column":8,"nodeType":"289","endLine":99,"endColumn":10,"suggestions":"355"},{"ruleId":"287","severity":1,"message":"356","line":104,"column":8,"nodeType":"289","endLine":104,"endColumn":10,"suggestions":"357"},{"ruleId":"287","severity":1,"message":"358","line":128,"column":8,"nodeType":"289","endLine":128,"endColumn":23,"suggestions":"359"},{"ruleId":"287","severity":1,"message":"360","line":144,"column":8,"nodeType":"289","endLine":144,"endColumn":21,"suggestions":"361"},{"ruleId":"287","severity":1,"message":"362","line":150,"column":8,"nodeType":"289","endLine":150,"endColumn":10,"suggestions":"363"},{"ruleId":"287","severity":1,"message":"364","line":167,"column":8,"nodeType":"289","endLine":167,"endColumn":10,"suggestions":"365"},{"ruleId":"287","severity":1,"message":"366","line":186,"column":8,"nodeType":"289","endLine":186,"endColumn":23,"suggestions":"367"},{"ruleId":"287","severity":1,"message":"366","line":196,"column":8,"nodeType":"289","endLine":196,"endColumn":21,"suggestions":"368"},{"ruleId":"287","severity":1,"message":"369","line":228,"column":8,"nodeType":"289","endLine":228,"endColumn":26,"suggestions":"370"},{"ruleId":"287","severity":1,"message":"371","line":316,"column":8,"nodeType":"289","endLine":316,"endColumn":28,"suggestions":"372"},{"ruleId":"287","severity":1,"message":"373","line":326,"column":8,"nodeType":"289","endLine":326,"endColumn":22,"suggestions":"374"},{"ruleId":"287","severity":1,"message":"356","line":332,"column":8,"nodeType":"289","endLine":332,"endColumn":29,"suggestions":"375"},{"ruleId":"287","severity":1,"message":"376","line":353,"column":8,"nodeType":"289","endLine":353,"endColumn":27,"suggestions":"377"},{"ruleId":"276","severity":1,"message":"378","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":44},{"ruleId":"276","severity":1,"message":"379","line":5,"column":10,"nodeType":"278","messageId":"279","endLine":5,"endColumn":21},{"ruleId":"276","severity":1,"message":"342","line":6,"column":10,"nodeType":"278","messageId":"279","endLine":6,"endColumn":26},{"ruleId":"276","severity":1,"message":"380","line":6,"column":28,"nodeType":"278","messageId":"279","endLine":6,"endColumn":36},{"ruleId":"276","severity":1,"message":"381","line":6,"column":38,"nodeType":"278","messageId":"279","endLine":6,"endColumn":47},{"ruleId":"276","severity":1,"message":"283","line":15,"column":13,"nodeType":"278","messageId":"279","endLine":15,"endColumn":20},{"ruleId":"276","severity":1,"message":"322","line":15,"column":22,"nodeType":"278","messageId":"279","endLine":15,"endColumn":35},{"ruleId":"276","severity":1,"message":"284","line":15,"column":37,"nodeType":"278","messageId":"279","endLine":15,"endColumn":42},{"ruleId":"276","severity":1,"message":"285","line":15,"column":44,"nodeType":"278","messageId":"279","endLine":15,"endColumn":58},{"ruleId":"276","severity":1,"message":"345","line":16,"column":20,"nodeType":"278","messageId":"279","endLine":16,"endColumn":33},{"ruleId":"276","severity":1,"message":"382","line":16,"column":35,"nodeType":"278","messageId":"279","endLine":16,"endColumn":51},{"ruleId":"276","severity":1,"message":"346","line":16,"column":53,"nodeType":"278","messageId":"279","endLine":16,"endColumn":68},{"ruleId":"287","severity":1,"message":"352","line":23,"column":18,"nodeType":"278","endLine":23,"endColumn":22},{"ruleId":"287","severity":1,"message":"383","line":47,"column":8,"nodeType":"289","endLine":47,"endColumn":10,"suggestions":"384"},{"ruleId":"287","severity":1,"message":"360","line":62,"column":8,"nodeType":"289","endLine":62,"endColumn":21,"suggestions":"385"},{"ruleId":"276","severity":1,"message":"311","line":6,"column":23,"nodeType":"278","messageId":"279","endLine":6,"endColumn":31},{"ruleId":"276","severity":1,"message":"277","line":9,"column":10,"nodeType":"278","messageId":"279","endLine":9,"endColumn":19},{"ruleId":"276","severity":1,"message":"283","line":50,"column":13,"nodeType":"278","messageId":"279","endLine":50,"endColumn":20},{"ruleId":"276","severity":1,"message":"285","line":50,"column":44,"nodeType":"278","messageId":"279","endLine":50,"endColumn":58},{"ruleId":"276","severity":1,"message":"286","line":50,"column":60,"nodeType":"278","messageId":"279","endLine":50,"endColumn":64},{"ruleId":"329","severity":1,"message":"330","line":62,"column":30,"nodeType":"331","messageId":"332","endLine":69,"endColumn":14},"no-unused-vars","'userLogin' is defined but never used.","Identifier","unusedVar","'CREATE_ROUTE' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'successMessage' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["386"],"'CLEAR_ERROR' is defined but never used.","'util' is assigned a value but never used.","'OFFER_GET_SUCCESS_CLEAR' is defined but never used.","'UPDATE_OFFER' is defined but never used.","'UPDATE_CONTACT_OFFER' is defined but never used.","'SOCKET_OFFER' is defined but never used.","'USER_UPDATE_SUCCESS' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'FormControl' is defined but never used.","'Switch' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","'Axios' is defined but never used.","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","'Navigate' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","Duplicate key 'keywords'.","'result' is assigned a value but never used.","'kwList' is assigned a value but never used.","'setKwList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'props.result'. Either include them or remove the dependency array.",["387"],"'expertiseTag' is assigned a value but never used.","'setExpertiseTag' is assigned a value but never used.","'authenticated' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["388"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Component' is defined but never used.","'useEffect' is defined but never used.","'flexbox' is defined but never used.","'results' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'state.results'. Either include them or remove the dependency array.",["389"],"'Search' is defined but never used.","'MessageSeparator' is defined but never used.","'ImageMessageSend' is defined but never used.","'getOfferContacts' is defined but never used.","'userGet' is defined but never used.","'offer' is assigned a value but never used.","'offerContacts' is assigned a value but never used.","'offerGetSuccess' is assigned a value but never used.","'activeUser' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.","'offerFromMe' is assigned a value but never used.","'newOffer' is assigned a value but never used.","Assignments to the 'myInfo' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","The ref value 'socket.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'socket.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'dispatch' and 'socket'. Either include them or remove the dependency array.",["390"],"React Hook useEffect has missing dependencies: 'dispatch', 'myInfo._id', and 'myInfo.id'. Either include them or remove the dependency array.",["391"],"React Hook useEffect has missing dependencies: 'currentContact', 'dispatch', 'myInfo._id', 'myInfo.id', and 'socket'. Either include them or remove the dependency array.",["392"],"React Hook useEffect has missing dependencies: 'currentContact', 'dispatch', 'myInfo._id', and 'myInfo.id'. Either include them or remove the dependency array.",["393"],"React Hook useEffect has missing dependencies: 'myInfo' and 'socket'. Either include them or remove the dependency array.",["394"],"React Hook useEffect has missing dependencies: 'dispatch', 'myInfo._id', 'myInfo.id', and 'socket'. Either include them or remove the dependency array.",["395"],"React Hook useEffect has missing dependencies: 'currentContact._id', 'dispatch', 'myInfo._id', 'myInfo.id', and 'socket'. Either include them or remove the dependency array.",["396"],["397"],"React Hook useEffect has missing dependencies: 'answererId', 'askerId', 'currentContact._id', 'dispatch', 'price', 'socket', 'user._id', 'user.id', and 'user.username'. Either include them or remove the dependency array.",["398"],"React Hook useEffect has missing dependencies: 'dispatch', 'message', and 'socket'. Either include them or remove the dependency array.",["399"],"React Hook useEffect has missing dependencies: 'dispatch' and 'myInfo'. Either include them or remove the dependency array.",["400"],["401"],"React Hook useEffect has missing dependencies: 'currentContact._id', 'dispatch', 'message', 'myInfo._id', 'myInfo.id', and 'socket'. Either include them or remove the dependency array.",["402"],"'useRef' is defined but never used.","'useLocation' is defined but never used.","'getOffer' is defined but never used.","'offerSend' is defined but never used.","'offerSendSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'myInfo', and 'socket'. Either include them or remove the dependency array.",["403"],["404"],{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"419","fix":"441"},"Update the dependencies array to be: [dispatch]",{"range":"442","text":"443"},"Update the dependencies array to be: [navigate, props.result, redirect]",{"range":"444","text":"445"},"Update the dependencies array to be: [state, user]",{"range":"446","text":"447"},"Update the dependencies array to be: [navigate, state.redirect, state.results]",{"range":"448","text":"449"},"Update the dependencies array to be: [dispatch, socket]",{"range":"450","text":"451"},"Update the dependencies array to be: [dispatch, myInfo._id, myInfo.id]",{"range":"452","text":"453"},"Update the dependencies array to be: [currentContact, dispatch, myInfo._id, myInfo.id, socket, socketMessage]",{"range":"454","text":"455"},"Update the dependencies array to be: [currentContact, dispatch, myInfo._id, myInfo.id, socketOffer]",{"range":"456","text":"457"},"Update the dependencies array to be: [myInfo, socket]",{"range":"458","text":"459"},"Update the dependencies array to be: [dispatch, myInfo._id, myInfo.id, socket]",{"range":"460","text":"461"},"Update the dependencies array to be: [currentContact._id, dispatch, myInfo._id, myInfo.id, socket, socketMessage]",{"range":"462","text":"463"},"Update the dependencies array to be: [currentContact._id, dispatch, myInfo._id, myInfo.id, socket, socketOffer]",{"range":"464","text":"465"},"Update the dependencies array to be: [answererId, askerId, currentContact._id, dispatch, offerSendSuccess, price, socket, user._id, user.id, user.username]",{"range":"466","text":"467"},"Update the dependencies array to be: [dispatch, message, messageSendSuccess, socket]",{"range":"468","text":"469"},"Update the dependencies array to be: [dispatch, myInfo, new_user_add]",{"range":"470","text":"471"},"Update the dependencies array to be: [currentContact._id, dispatch, myInfo._id, myInfo.id]",{"range":"472","text":"473"},"Update the dependencies array to be: [currentContact._id, dispatch, message, messageGetSuccess, myInfo._id, myInfo.id, socket]",{"range":"474","text":"475"},"Update the dependencies array to be: [dispatch, myInfo, socket]",{"range":"476","text":"477"},{"range":"478","text":"457"},[1944,1946],"[dispatch]",[3012,3022],"[navigate, props.result, redirect]",[2941,2947],"[state, user]",[2742,2758],"[navigate, state.redirect, state.results]",[3591,3593],"[dispatch, socket]",[3721,3723],"[dispatch, myInfo._id, myInfo.id]",[4591,4606],"[currentContact, dispatch, myInfo._id, myInfo.id, socket, socketMessage]",[5099,5112],"[currentContact, dispatch, myInfo._id, myInfo.id, socketOffer]",[5251,5253],"[myInfo, socket]",[5736,5738],"[dispatch, myInfo._id, myInfo.id, socket]",[6415,6430],"[currentContact._id, dispatch, myInfo._id, myInfo.id, socket, socketMessage]",[6823,6836],"[currentContact._id, dispatch, myInfo._id, myInfo.id, socket, socketOffer]",[7759,7777],"[answererId, askerId, currentContact._id, dispatch, offerSendSuccess, price, socket, user._id, user.id, user.username]",[10022,10042],"[dispatch, message, messageSendSuccess, socket]",[10286,10300],"[dispatch, myInfo, new_user_add]",[10503,10524],"[currentContact._id, dispatch, myInfo._id, myInfo.id]",[11236,11255],"[currentContact._id, dispatch, message, messageGetSuccess, myInfo._id, myInfo.id, socket]",[1529,1531],"[dispatch, myInfo, socket]",[2022,2035]]